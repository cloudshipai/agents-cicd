name: 🛡️ Station DevOps Security Audit

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to test (leave empty for default)'
        required: false
        default: 'devops-simple'
        type: string
  pull_request:
    branches: [ main ]

jobs:
  security-audit:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      packages: read
    
    steps:
    - name: 📥 Checkout Code
      uses: actions/checkout@v4
      
    - name: 🐳 Pull Station DevOps Container
      run: |
        # Pull the pre-built Station DevOps container with all security tools
        docker pull epuerta18/station-devops-simple:latest
        echo "Successfully pulled Station DevOps container with 28 security tools"
        
    - name: 🔍 Run Security Scanner Agent
      id: security-scan
      run: |
        echo "=== Running Security Scanner Agent with Station ===" | tee -a results.log
        
        RESULT=$(docker run --rm \
          -v ${{ github.workspace }}:/workspace \
          -w /workspace \
          -e OPENAI_API_KEY="${{ secrets.OPENAI_API_KEY }}" \
          -e PROJECT_ROOT="/workspace" \
          epuerta18/station-devops-simple:latest \
          bash -c "
            echo 'PROJECT_ROOT: /workspace' > /root/.config/station/environments/default/variables.yml && \
            stn sync default -i=false && \
            stn agent run 'Security Scanner' 'Use __list_directory with path \"/workspace\" to see files, then use __gitleaks_dir with path \"/workspace\" to scan for secrets.' --env default
          " | tee -a results.log)
        
        # Extract the structured result section  
        echo "$RESULT" | sed -n '/📋 Execution Results/,/Token Usage:/p' > security-results.txt
        echo "SECURITY_RESULT<<EOF" >> $GITHUB_OUTPUT
        cat security-results.txt >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT
        
        # Extract just the agent's analysis
        echo "$RESULT" | sed -n '/Result:/,/Token Usage:/p' | sed '1d;$d' > security-analysis.txt
        echo "SECURITY_ANALYSIS<<EOF" >> $GITHUB_OUTPUT
        cat security-analysis.txt >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT
      continue-on-error: false
      
    - name: 🏗️ Run Terraform Auditor Agent
      id: terraform-scan
      run: |
        echo "=== Running Terraform Auditor Agent with Station ===" | tee -a results.log
        
        RESULT=$(docker run --rm \
          -v ${{ github.workspace }}:/workspace \
          -w /workspace \
          -e OPENAI_API_KEY="${{ secrets.OPENAI_API_KEY }}" \
          -e PROJECT_ROOT="/workspace" \
          epuerta18/station-devops-simple:latest \
          bash -c "
            echo 'PROJECT_ROOT: /workspace' > /root/.config/station/environments/default/variables.yml && \
            stn sync default -i=false && \
            stn agent run 'Terraform Auditor' 'Use __directory_tree with path \"/workspace\" to explore structure, then use __checkov_dir with path \"/workspace/terraform\" to scan Terraform files.' --env default
          " | tee -a results.log)
        
        # Extract the structured result section
        echo "$RESULT" | sed -n '/📋 Execution Results/,/Token Usage:/p' > terraform-results.txt
        echo "TERRAFORM_RESULT<<EOF" >> $GITHUB_OUTPUT
        cat terraform-results.txt >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT
        
        # Extract just the agent's analysis
        echo "$RESULT" | sed -n '/Result:/,/Token Usage:/p' | sed '1d;$d' > terraform-analysis.txt
        echo "TERRAFORM_ANALYSIS<<EOF" >> $GITHUB_OUTPUT
        cat terraform-analysis.txt >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT
      continue-on-error: true

    - name: 📊 Generate Security Report Summary
      run: |
        echo "# 🛡️ Station DevOps Security Audit Results" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "## 📊 Execution Summary" >> $GITHUB_STEP_SUMMARY  
        echo "- **Repository**: \`${{ github.repository }}\`" >> $GITHUB_STEP_SUMMARY
        echo "- **Commit**: \`${{ github.sha }}\`" >> $GITHUB_STEP_SUMMARY
        echo "- **Triggered by**: ${{ github.event_name }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Date**: $(date -u '+%Y-%m-%d %H:%M:%S UTC')" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        echo "## 🔍 Security Scans Completed" >> $GITHUB_STEP_SUMMARY
        echo "### 🔒 Security Scanner Results" >> $GITHUB_STEP_SUMMARY
        echo '```' >> $GITHUB_STEP_SUMMARY
        echo "${{ steps.security-scan.outputs.SECURITY_RESULT }}" >> $GITHUB_STEP_SUMMARY
        echo '```' >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        echo "### 🏗️ Terraform Auditor Results" >> $GITHUB_STEP_SUMMARY
        echo '```' >> $GITHUB_STEP_SUMMARY
        echo "${{ steps.terraform-scan.outputs.TERRAFORM_RESULT }}" >> $GITHUB_STEP_SUMMARY  
        echo '```' >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        echo "## 🛠️ Tools Used" >> $GITHUB_STEP_SUMMARY
        echo "- **gitleaks**: Secret detection (4 tools)" >> $GITHUB_STEP_SUMMARY
        echo "- **checkov**: Infrastructure security (10 tools)" >> $GITHUB_STEP_SUMMARY
        echo "- **filesystem**: Code analysis (14 tools)" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "_Powered by [Station DevOps Platform](https://station.dev) 🚀_" >> $GITHUB_STEP_SUMMARY
        
    - name: 💬 Comment PR with Detailed Results
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const securityResult = `${{ steps.security-scan.outputs.SECURITY_RESULT }}`;
          const securityAnalysis = `${{ steps.security-scan.outputs.SECURITY_ANALYSIS }}`;
          const terraformResult = `${{ steps.terraform-scan.outputs.TERRAFORM_RESULT }}`;
          const terraformAnalysis = `${{ steps.terraform-scan.outputs.TERRAFORM_ANALYSIS }}`;
          
          const comment = `## 🛡️ Station DevOps Security Audit Complete
          
          **Automated security analysis has been completed for this PR using Station DevOps agents.**
          
          ### 🔒 Security Scanner Results
          \`\`\`
          ${securityResult}
          \`\`\`
          
          **Security Analysis:**
          ${securityAnalysis}
          
          ---
          
          ### 🏗️ Terraform Security Auditor Results  
          \`\`\`
          ${terraformResult}
          \`\`\`
          
          **Terraform Analysis:**
          ${terraformAnalysis}
          
          ---
          
          ### 🔧 Tools Used
          - **Secret Detection**: gitleaks for exposed credentials
          - **Infrastructure Security**: checkov for Terraform analysis  
          - **Total Tools**: 28 security and analysis tools
          
          ### 📊 Summary
          This automated security audit was performed using [Station DevOps Platform](https://station.dev) with Ship CLI security tools. The agents analyzed your code for:
          - 🔍 Exposed secrets and API keys
          - 🏗️ Infrastructure security misconfigurations
          - 📋 Security best practices compliance
          
          **Review the detailed findings above and address any critical or high-priority issues before merging.**
          
          _Automated by Station DevOps Security Platform_ 🚀`;
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });

    - name: 📁 Upload Detailed Results
      uses: actions/upload-artifact@v4
      with:
        name: security-audit-results
        path: |
          results.log
          security-results.txt
          security-analysis.txt  
          terraform-results.txt
          terraform-analysis.txt
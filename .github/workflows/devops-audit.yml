name: DevOps CICD Pipeline Audit

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  comprehensive-audit:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout Code
      uses: actions/checkout@v4
      
    - name: Run DevOps CICD Pipeline Auditor
      run: |
        docker run --rm \
          -v ${{ github.workspace }}:/workspace \
          -e OPENAI_API_KEY="${{ secrets.OPENAI_API_KEY }}" \
          -e PROJECT_ROOT="/workspace" \
          station-devops-cicd:latest \
          bash -c "
            mkdir -p /root/.config/station/environments/default && \
            echo 'PROJECT_ROOT: /workspace' > /root/.config/station/environments/default/variables.yml && \
            stn sync default && \
            stn agent run 'DevOps CICD Pipeline Auditor' 'Perform comprehensive CICD security audit: 1) Scan for secrets with gitleaks and git-secrets 2) Analyze container security with trivy and hadolint 3) Check GitHub Actions with actionlint 4) Examine infrastructure with terraform tools 5) Generate SBOM and check supply chain with syft 6) Provide actionable security recommendations' --env default
          "
      continue-on-error: false
    
    - name: Run Infrastructure Code Auditor  
      run: |
        docker run --rm \
          -v ${{ github.workspace }}:/workspace \
          -e OPENAI_API_KEY="${{ secrets.OPENAI_API_KEY }}" \
          -e PROJECT_ROOT="/workspace" \
          station-devops-cicd:latest \
          bash -c "
            mkdir -p /root/.config/station/environments/default && \
            echo 'PROJECT_ROOT: /workspace' > /root/.config/station/environments/default/variables.yml && \
            stn sync default && \
            stn agent run 'Infrastructure Code Auditor' 'Analyze terraform configurations: 1) Run security scans with checkov and terrascan 2) Perform cost analysis with infracost 3) Generate documentation with terraform-docs 4) Check best practices with tflint 5) Create infrastructure diagrams if possible' --env default
          "
      continue-on-error: true

    - name: Run Supply Chain Security Analysis
      run: |
        docker run --rm \
          -v ${{ github.workspace }}:/workspace \
          -e OPENAI_API_KEY="${{ secrets.OPENAI_API_KEY }}" \
          -e PROJECT_ROOT="/workspace" \
          station-devops-cicd:latest \
          bash -c "
            mkdir -p /root/.config/station/environments/default && \
            echo 'PROJECT_ROOT: /workspace' > /root/.config/station/environments/default/variables.yml && \
            stn sync default && \
            stn agent run 'Supply Chain Security Analyst' 'Analyze supply chain security: 1) Generate SBOM with syft 2) Check for vulnerabilities with osv-scanner 3) Analyze licenses with license-detector 4) Check for dependency risks 5) Verify artifact integrity if possible' --env default  
          "
      continue-on-error: true

    - name: Run GitHub Actions Security Review
      run: |
        docker run --rm \
          -v ${{ github.workspace }}:/workspace \
          -e OPENAI_API_KEY="${{ secrets.OPENAI_API_KEY }}" \
          -e PROJECT_ROOT="/workspace" \
          station-devops-cicd:latest \
          bash -c "
            mkdir -p /root/.config/station/environments/default && \
            echo 'PROJECT_ROOT: /workspace' > /root/.config/station/environments/default/variables.yml && \
            stn sync default && \
            stn agent run 'GitHub Actions Security Reviewer' 'Review GitHub Actions security: 1) Lint workflows with actionlint 2) Analyze permissions and secrets usage 3) Check for injection vulnerabilities 4) Review third-party actions security 5) Provide security hardening recommendations' --env default
          "
      continue-on-error: true

    - name: Generate Comprehensive Security Report
      run: |
        echo "# 🛡️ DevOps CICD Security Audit Results" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "## 📊 Audit Summary" >> $GITHUB_STEP_SUMMARY  
        echo "- **Repository**: ${{ github.repository }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Commit**: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Audit Date**: $(date)" >> $GITHUB_STEP_SUMMARY
        echo "- **Container**: station-devops-cicd:latest" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "## 🔍 Security Audits Performed" >> $GITHUB_STEP_SUMMARY
        echo "✅ **Comprehensive Pipeline Audit**: Full security, infrastructure, and supply chain analysis" >> $GITHUB_STEP_SUMMARY
        echo "✅ **Infrastructure Code Review**: Terraform security scanning and cost analysis" >> $GITHUB_STEP_SUMMARY  
        echo "✅ **Supply Chain Analysis**: SBOM generation and dependency vulnerability scanning" >> $GITHUB_STEP_SUMMARY
        echo "✅ **GitHub Actions Security**: Workflow security analysis and hardening recommendations" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "## 🛠️ Tools Utilized" >> $GITHUB_STEP_SUMMARY
        echo "- **Security**: gitleaks, git-secrets, trivy, semgrep, checkov, terrascan, hadolint" >> $GITHUB_STEP_SUMMARY
        echo "- **Infrastructure**: tflint, terraform-docs, infracost, inframap" >> $GITHUB_STEP_SUMMARY
        echo "- **Supply Chain**: syft, osv-scanner, license-detector, cosign" >> $GITHUB_STEP_SUMMARY
        echo "- **CI/CD**: actionlint, GitHub Actions security analysis" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "_Powered by [Station](https://station.dev) DevOps Security Agents_" >> $GITHUB_STEP_SUMMARY

    - name: Comment PR with Security Results
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: `## 🔒 DevOps Security Audit Complete
            
            Station DevOps agents have completed comprehensive security analysis:
            
            ### 🛡️ Security Audits Performed:
            - **Pipeline Security Audit**: Full CICD pipeline vulnerability assessment
            - **Infrastructure Security**: Terraform code security scanning and analysis  
            - **Supply Chain Security**: SBOM generation and dependency risk assessment
            - **GitHub Actions Security**: Workflow security analysis and recommendations
            
            ### 🛠️ Security Tools Used:
            - Secret scanning, vulnerability analysis, container security
            - Infrastructure as code security validation
            - Supply chain integrity verification
            - CI/CD security best practices validation
            
            **Review the [workflow run](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}) for detailed security findings.**
            
            _Automated by [Station DevOps Security Platform](https://station.dev)_ 🚀`
          })
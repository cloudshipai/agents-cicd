terraform scan results:

Passed checks: 22, Failed checks: 41, Skipped checks: 0

Check: CKV_AWS_41: "Ensure no hard coded AWS access key and secret key exists in provider"
	PASSED for resource: aws.default
	File: /terraform/main.tf:12-14
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/secrets-policies/bc-aws-secrets-5
Check: CKV_AWS_93: "Ensure S3 bucket policy does not lockout all but root user. (Prevent lockouts needing root account fixes)"
	PASSED for resource: aws_s3_bucket.demo_bucket
	File: /terraform/main.tf:17-19
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/bc-aws-s3-24
Check: CKV_AWS_375: "Ensure AWS S3 bucket does not have global view ACL permissions enabled"
	PASSED for resource: aws_s3_bucket_acl.demo_bucket
	File: /terraform/main.tf:31-38
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/bc-aws-375
Check: CKV_AWS_25: "Ensure no security groups allow ingress from 0.0.0.0:0 to port 3389"
	PASSED for resource: aws_security_group.web
	File: /terraform/main.tf:49-86
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/networking-2
Check: CKV_AWS_277: "Ensure no security groups allow ingress from 0.0.0.0:0 to port -1"
	PASSED for resource: aws_security_group.web
	File: /terraform/main.tf:49-86
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/ensure-aws-security-group-does-not-allow-all-traffic-on-all-ports
Check: CKV_AWS_88: "EC2 instance should not have public IP."
	PASSED for resource: aws_instance.web
	File: /terraform/main.tf:89-120
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/public-policies/public-12
Check: CKV_AWS_46: "Ensure no hard-coded secrets exist in EC2 user data"
	PASSED for resource: aws_instance.web
	File: /terraform/main.tf:89-120
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/secrets-policies/bc-aws-secrets-1
Check: CKV_AWS_388: "Ensure AWS Aurora PostgreSQL is not exposed to local file read vulnerability"
	PASSED for resource: aws_db_instance.demo
	File: /terraform/main.tf:123-150
Check: CKV_AWS_211: "Ensure RDS uses a modern CaCert"
	PASSED for resource: aws_db_instance.demo
	File: /terraform/main.tf:123-150
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/ensure-aws-rds-uses-a-modern-cacert
Check: CKV_AWS_354: "Ensure RDS Performance Insights are encrypted using KMS CMKs"
	PASSED for resource: aws_db_instance.demo
	File: /terraform/main.tf:123-150
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/bc-aws-354
Check: CKV_AWS_260: "Ensure no security groups allow ingress from 0.0.0.0:0 to port 80"
	PASSED for resource: aws_security_group.database
	File: /terraform/main.tf:153-165
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/ensure-aws-security-groups-do-not-allow-ingress-from-00000-to-port-80
Check: CKV_AWS_25: "Ensure no security groups allow ingress from 0.0.0.0:0 to port 3389"
	PASSED for resource: aws_security_group.database
	File: /terraform/main.tf:153-165
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/networking-2
Check: CKV_AWS_24: "Ensure no security groups allow ingress from 0.0.0.0:0 to port 22"
	PASSED for resource: aws_security_group.database
	File: /terraform/main.tf:153-165
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/networking-1-port-security
Check: CKV_AWS_382: "Ensure no security groups allow egress from 0.0.0.0:0 to port -1"
	PASSED for resource: aws_security_group.database
	File: /terraform/main.tf:153-165
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/bc-aws-382
Check: CKV_AWS_23: "Ensure every security group and rule has a description"
	PASSED for resource: aws_security_group.database
	File: /terraform/main.tf:153-165
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/networking-31
Check: CKV_AWS_277: "Ensure no security groups allow ingress from 0.0.0.0:0 to port -1"
	PASSED for resource: aws_security_group.database
	File: /terraform/main.tf:153-165
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/ensure-aws-security-group-does-not-allow-all-traffic-on-all-ports
Check: CKV2_AWS_5: "Ensure that Security Groups are attached to another resource"
	PASSED for resource: aws_security_group.web
	File: /terraform/main.tf:49-86
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/ensure-that-security-groups-are-attached-to-ec2-instances-or-elastic-network-interfaces-enis
Check: CKV2_AWS_5: "Ensure that Security Groups are attached to another resource"
	PASSED for resource: aws_security_group.database
	File: /terraform/main.tf:153-165
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/ensure-that-security-groups-are-attached-to-ec2-instances-or-elastic-network-interfaces-enis
Check: CKV2_AWS_43: "Ensure S3 Bucket does not allow access to all Authenticated users"
	PASSED for resource: aws_s3_bucket_acl.demo_bucket
	File: /terraform/main.tf:31-38
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/ensure-s3-bucket-does-not-allow-access-to-all-authenticated-users
Check: CKV_AWS_19: "Ensure all data stored in the S3 bucket is securely encrypted at rest"
	PASSED for resource: aws_s3_bucket.demo_bucket
	File: /terraform/main.tf:17-19
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/s3-14-data-encrypted-at-rest
Check: CKV2_AWS_69: "Ensure AWS RDS database instance configured with encryption in transit"
	PASSED for resource: aws_db_instance.demo
	File: /terraform/main.tf:123-150
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/bc-aws-2-69
Check: CKV_AWS_57: "S3 Bucket has an ACL defined which allows public WRITE access."
	PASSED for resource: aws_s3_bucket.demo_bucket
	File: /terraform/main.tf:17-19
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/s3-2-acl-write-permissions-everyone
Check: CKV_AWS_53: "Ensure S3 bucket has block public ACLS enabled"
	FAILED for resource: aws_s3_bucket_public_access_block.demo_bucket
	File: /terraform/main.tf:21-29
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/bc-aws-s3-19

		21 | resource "aws_s3_bucket_public_access_block" "demo_bucket" {
		22 |   bucket = aws_s3_bucket.demo_bucket.id
		23 | 
		24 |   # INSECURE: Allows public access
		25 |   block_public_acls       = false
		26 |   block_public_policy     = false
		27 |   ignore_public_acls      = false
		28 |   restrict_public_buckets = false
		29 | }

Check: CKV_AWS_55: "Ensure S3 bucket has ignore public ACLs enabled"
	FAILED for resource: aws_s3_bucket_public_access_block.demo_bucket
	File: /terraform/main.tf:21-29
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/bc-aws-s3-21

		21 | resource "aws_s3_bucket_public_access_block" "demo_bucket" {
		22 |   bucket = aws_s3_bucket.demo_bucket.id
		23 | 
		24 |   # INSECURE: Allows public access
		25 |   block_public_acls       = false
		26 |   block_public_policy     = false
		27 |   ignore_public_acls      = false
		28 |   restrict_public_buckets = false
		29 | }

Check: CKV_AWS_56: "Ensure S3 bucket has 'restrict_public_buckets' enabled"
	FAILED for resource: aws_s3_bucket_public_access_block.demo_bucket
	File: /terraform/main.tf:21-29
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/bc-aws-s3-22

		21 | resource "aws_s3_bucket_public_access_block" "demo_bucket" {
		22 |   bucket = aws_s3_bucket.demo_bucket.id
		23 | 
		24 |   # INSECURE: Allows public access
		25 |   block_public_acls       = false
		26 |   block_public_policy     = false
		27 |   ignore_public_acls      = false
		28 |   restrict_public_buckets = false
		29 | }

Check: CKV_AWS_54: "Ensure S3 bucket has block public policy enabled"
	FAILED for resource: aws_s3_bucket_public_access_block.demo_bucket
	File: /terraform/main.tf:21-29
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/bc-aws-s3-20

		21 | resource "aws_s3_bucket_public_access_block" "demo_bucket" {
		22 |   bucket = aws_s3_bucket.demo_bucket.id
		23 | 
		24 |   # INSECURE: Allows public access
		25 |   block_public_acls       = false
		26 |   block_public_policy     = false
		27 |   ignore_public_acls      = false
		28 |   restrict_public_buckets = false
		29 | }

Check: CKV_AWS_260: "Ensure no security groups allow ingress from 0.0.0.0:0 to port 80"
	FAILED for resource: aws_security_group.web
	File: /terraform/main.tf:49-86
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/ensure-aws-security-groups-do-not-allow-ingress-from-00000-to-port-80

		49 | resource "aws_security_group" "web" {
		50 |   name        = "web-security-group"
		51 |   description = "Security group for web servers"
		52 | 
		53 |   # INSECURE: SSH open to world
		54 |   ingress {
		55 |     description = "SSH"
		56 |     from_port   = 22
		57 |     to_port     = 22
		58 |     protocol    = "tcp"
		59 |     cidr_blocks = ["0.0.0.0/0"]  # INSECURE!
		60 |   }
		61 | 
		62 |   # INSECURE: HTTP open to world without HTTPS
		63 |   ingress {
		64 |     description = "HTTP"
		65 |     from_port   = 80
		66 |     to_port     = 80
		67 |     protocol    = "tcp"
		68 |     cidr_blocks = ["0.0.0.0/0"]
		69 |   }
		70 | 
		71 |   # INSECURE: Wide port range open
		72 |   ingress {
		73 |     description = "All ports"
		74 |     from_port   = 8000
		75 |     to_port     = 9000
		76 |     protocol    = "tcp"
		77 |     cidr_blocks = ["0.0.0.0/0"]  # INSECURE!
		78 |   }
		79 | 
		80 |   egress {
		81 |     from_port   = 0
		82 |     to_port     = 0
		83 |     protocol    = "-1"
		84 |     cidr_blocks = ["0.0.0.0/0"]
		85 |   }
		86 | }

Check: CKV_AWS_24: "Ensure no security groups allow ingress from 0.0.0.0:0 to port 22"
	FAILED for resource: aws_security_group.web
	File: /terraform/main.tf:49-86
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/networking-1-port-security

		49 | resource "aws_security_group" "web" {
		50 |   name        = "web-security-group"
		51 |   description = "Security group for web servers"
		52 | 
		53 |   # INSECURE: SSH open to world
		54 |   ingress {
		55 |     description = "SSH"
		56 |     from_port   = 22
		57 |     to_port     = 22
		58 |     protocol    = "tcp"
		59 |     cidr_blocks = ["0.0.0.0/0"]  # INSECURE!
		60 |   }
		61 | 
		62 |   # INSECURE: HTTP open to world without HTTPS
		63 |   ingress {
		64 |     description = "HTTP"
		65 |     from_port   = 80
		66 |     to_port     = 80
		67 |     protocol    = "tcp"
		68 |     cidr_blocks = ["0.0.0.0/0"]
		69 |   }
		70 | 
		71 |   # INSECURE: Wide port range open
		72 |   ingress {
		73 |     description = "All ports"
		74 |     from_port   = 8000
		75 |     to_port     = 9000
		76 |     protocol    = "tcp"
		77 |     cidr_blocks = ["0.0.0.0/0"]  # INSECURE!
		78 |   }
		79 | 
		80 |   egress {
		81 |     from_port   = 0
		82 |     to_port     = 0
		83 |     protocol    = "-1"
		84 |     cidr_blocks = ["0.0.0.0/0"]
		85 |   }
		86 | }

Check: CKV_AWS_382: "Ensure no security groups allow egress from 0.0.0.0:0 to port -1"
	FAILED for resource: aws_security_group.web
	File: /terraform/main.tf:49-86
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/bc-aws-382

		49 | resource "aws_security_group" "web" {
		50 |   name        = "web-security-group"
		51 |   description = "Security group for web servers"
		52 | 
		53 |   # INSECURE: SSH open to world
		54 |   ingress {
		55 |     description = "SSH"
		56 |     from_port   = 22
		57 |     to_port     = 22
		58 |     protocol    = "tcp"
		59 |     cidr_blocks = ["0.0.0.0/0"]  # INSECURE!
		60 |   }
		61 | 
		62 |   # INSECURE: HTTP open to world without HTTPS
		63 |   ingress {
		64 |     description = "HTTP"
		65 |     from_port   = 80
		66 |     to_port     = 80
		67 |     protocol    = "tcp"
		68 |     cidr_blocks = ["0.0.0.0/0"]
		69 |   }
		70 | 
		71 |   # INSECURE: Wide port range open
		72 |   ingress {
		73 |     description = "All ports"
		74 |     from_port   = 8000
		75 |     to_port     = 9000
		76 |     protocol    = "tcp"
		77 |     cidr_blocks = ["0.0.0.0/0"]  # INSECURE!
		78 |   }
		79 | 
		80 |   egress {
		81 |     from_port   = 0
		82 |     to_port     = 0
		83 |     protocol    = "-1"
		84 |     cidr_blocks = ["0.0.0.0/0"]
		85 |   }
		86 | }

Check: CKV_AWS_23: "Ensure every security group and rule has a description"
	FAILED for resource: aws_security_group.web
	File: /terraform/main.tf:49-86
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/networking-31

		49 | resource "aws_security_group" "web" {
		50 |   name        = "web-security-group"
		51 |   description = "Security group for web servers"
		52 | 
		53 |   # INSECURE: SSH open to world
		54 |   ingress {
		55 |     description = "SSH"
		56 |     from_port   = 22
		57 |     to_port     = 22
		58 |     protocol    = "tcp"
		59 |     cidr_blocks = ["0.0.0.0/0"]  # INSECURE!
		60 |   }
		61 | 
		62 |   # INSECURE: HTTP open to world without HTTPS
		63 |   ingress {
		64 |     description = "HTTP"
		65 |     from_port   = 80
		66 |     to_port     = 80
		67 |     protocol    = "tcp"
		68 |     cidr_blocks = ["0.0.0.0/0"]
		69 |   }
		70 | 
		71 |   # INSECURE: Wide port range open
		72 |   ingress {
		73 |     description = "All ports"
		74 |     from_port   = 8000
		75 |     to_port     = 9000
		76 |     protocol    = "tcp"
		77 |     cidr_blocks = ["0.0.0.0/0"]  # INSECURE!
		78 |   }
		79 | 
		80 |   egress {
		81 |     from_port   = 0
		82 |     to_port     = 0
		83 |     protocol    = "-1"
		84 |     cidr_blocks = ["0.0.0.0/0"]
		85 |   }
		86 | }

Check: CKV_AWS_126: "Ensure that detailed monitoring is enabled for EC2 instances"
	FAILED for resource: aws_instance.web
	File: /terraform/main.tf:89-120
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-logging-policies/ensure-that-detailed-monitoring-is-enabled-for-ec2-instances

		89  | resource "aws_instance" "web" {
		90  |   ami           = "ami-0c94855ba95b798c7"  # Amazon Linux 2 in us-west-2
		91  |   instance_type = "t3.micro"
		92  |   
		93  |   # INSECURE: No encryption for EBS
		94  |   root_block_device {
		95  |     volume_type = "gp3"
		96  |     volume_size = 20
		97  |     encrypted   = false  # INSECURE!
		98  |   }
		99  | 
		100 |   vpc_security_group_ids = [aws_security_group.web.id]
		101 | 
		102 |   # INSECURE: Hardcoded user data (could contain secrets)
		103 |   user_data = base64encode(<<-EOF
		104 |               #!/bin/bash
		105 |               yum update -y
		106 |               yum install -y httpd
		107 |               systemctl start httpd
		108 |               systemctl enable httpd
		109 |               echo '<h1>Demo Web Server</h1>' > /var/www/html/index.html
		110 |               # INSECURE: Hardcoded API key (for testing secret detection)
		111 |               export API_KEY=sk-1234567890abcdef1234567890abcdef
		112 |               EOF
		113 |   )
		114 | 
		115 |   tags = {
		116 |     Name        = "demo-web-server"
		117 |     Environment = "testing"
		118 |     # INSECURE: Missing required tags for compliance
		119 |   }
		120 | }

Check: CKV_AWS_79: "Ensure Instance Metadata Service Version 1 is not enabled"
	FAILED for resource: aws_instance.web
	File: /terraform/main.tf:89-120
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/bc-aws-general-31

		89  | resource "aws_instance" "web" {
		90  |   ami           = "ami-0c94855ba95b798c7"  # Amazon Linux 2 in us-west-2
		91  |   instance_type = "t3.micro"
		92  |   
		93  |   # INSECURE: No encryption for EBS
		94  |   root_block_device {
		95  |     volume_type = "gp3"
		96  |     volume_size = 20
		97  |     encrypted   = false  # INSECURE!
		98  |   }
		99  | 
		100 |   vpc_security_group_ids = [aws_security_group.web.id]
		101 | 
		102 |   # INSECURE: Hardcoded user data (could contain secrets)
		103 |   user_data = base64encode(<<-EOF
		104 |               #!/bin/bash
		105 |               yum update -y
		106 |               yum install -y httpd
		107 |               systemctl start httpd
		108 |               systemctl enable httpd
		109 |               echo '<h1>Demo Web Server</h1>' > /var/www/html/index.html
		110 |               # INSECURE: Hardcoded API key (for testing secret detection)
		111 |               export API_KEY=sk-1234567890abcdef1234567890abcdef
		112 |               EOF
		113 |   )
		114 | 
		115 |   tags = {
		116 |     Name        = "demo-web-server"
		117 |     Environment = "testing"
		118 |     # INSECURE: Missing required tags for compliance
		119 |   }
		120 | }

Check: CKV_AWS_135: "Ensure that EC2 is EBS optimized"
	FAILED for resource: aws_instance.web
	File: /terraform/main.tf:89-120
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/ensure-that-ec2-is-ebs-optimized

		89  | resource "aws_instance" "web" {
		90  |   ami           = "ami-0c94855ba95b798c7"  # Amazon Linux 2 in us-west-2
		91  |   instance_type = "t3.micro"
		92  |   
		93  |   # INSECURE: No encryption for EBS
		94  |   root_block_device {
		95  |     volume_type = "gp3"
		96  |     volume_size = 20
		97  |     encrypted   = false  # INSECURE!
		98  |   }
		99  | 
		100 |   vpc_security_group_ids = [aws_security_group.web.id]
		101 | 
		102 |   # INSECURE: Hardcoded user data (could contain secrets)
		103 |   user_data = base64encode(<<-EOF
		104 |               #!/bin/bash
		105 |               yum update -y
		106 |               yum install -y httpd
		107 |               systemctl start httpd
		108 |               systemctl enable httpd
		109 |               echo '<h1>Demo Web Server</h1>' > /var/www/html/index.html
		110 |               # INSECURE: Hardcoded API key (for testing secret detection)
		111 |               export API_KEY=sk-1234567890abcdef1234567890abcdef
		112 |               EOF
		113 |   )
		114 | 
		115 |   tags = {
		116 |     Name        = "demo-web-server"
		117 |     Environment = "testing"
		118 |     # INSECURE: Missing required tags for compliance
		119 |   }
		120 | }

Check: CKV_AWS_8: "Ensure all data stored in the Launch configuration or instance Elastic Blocks Store is securely encrypted"
	FAILED for resource: aws_instance.web
	File: /terraform/main.tf:89-120
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/general-13

		89  | resource "aws_instance" "web" {
		90  |   ami           = "ami-0c94855ba95b798c7"  # Amazon Linux 2 in us-west-2
		91  |   instance_type = "t3.micro"
		92  |   
		93  |   # INSECURE: No encryption for EBS
		94  |   root_block_device {
		95  |     volume_type = "gp3"
		96  |     volume_size = 20
		97  |     encrypted   = false  # INSECURE!
		98  |   }
		99  | 
		100 |   vpc_security_group_ids = [aws_security_group.web.id]
		101 | 
		102 |   # INSECURE: Hardcoded user data (could contain secrets)
		103 |   user_data = base64encode(<<-EOF
		104 |               #!/bin/bash
		105 |               yum update -y
		106 |               yum install -y httpd
		107 |               systemctl start httpd
		108 |               systemctl enable httpd
		109 |               echo '<h1>Demo Web Server</h1>' > /var/www/html/index.html
		110 |               # INSECURE: Hardcoded API key (for testing secret detection)
		111 |               export API_KEY=sk-1234567890abcdef1234567890abcdef
		112 |               EOF
		113 |   )
		114 | 
		115 |   tags = {
		116 |     Name        = "demo-web-server"
		117 |     Environment = "testing"
		118 |     # INSECURE: Missing required tags for compliance
		119 |   }
		120 | }

Check: CKV_AWS_129: "Ensure that respective logs of Amazon Relational Database Service (Amazon RDS) are enabled"
	FAILED for resource: aws_db_instance.demo
	File: /terraform/main.tf:123-150
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/ensure-that-respective-logs-of-amazon-relational-database-service-amazon-rds-are-enabled

		123 | resource "aws_db_instance" "demo" {
		124 |   identifier = "demo-database"
		125 |   
		126 |   engine         = "mysql"
		127 |   engine_version = "8.0"
		128 |   instance_class = "db.t3.micro"
		129 |   
		130 |   allocated_storage     = 20
		131 |   max_allocated_storage = 100
		132 |   
		133 |   db_name  = "demo"
		134 |   username = "admin"
		135 |   password = "password123"  # INSECURE: Hardcoded password!
		136 |   
		137 |   # INSECURE: Not encrypted
		138 |   storage_encrypted = false
		139 |   
		140 |   # INSECURE: Public access
		141 |   publicly_accessible = true
		142 |   
		143 |   # INSECURE: No backup retention
		144 |   backup_retention_period = 0
		145 |   
		146 |   # INSECURE: Skip final snapshot
		147 |   skip_final_snapshot = true
		148 |   
		149 |   vpc_security_group_ids = [aws_security_group.database.id]
		150 | }

Check: CKV_AWS_293: "Ensure that AWS database instances have deletion protection enabled"
	FAILED for resource: aws_db_instance.demo
	File: /terraform/main.tf:123-150
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/bc-aws-293

		123 | resource "aws_db_instance" "demo" {
		124 |   identifier = "demo-database"
		125 |   
		126 |   engine         = "mysql"
		127 |   engine_version = "8.0"
		128 |   instance_class = "db.t3.micro"
		129 |   
		130 |   allocated_storage     = 20
		131 |   max_allocated_storage = 100
		132 |   
		133 |   db_name  = "demo"
		134 |   username = "admin"
		135 |   password = "password123"  # INSECURE: Hardcoded password!
		136 |   
		137 |   # INSECURE: Not encrypted
		138 |   storage_encrypted = false
		139 |   
		140 |   # INSECURE: Public access
		141 |   publicly_accessible = true
		142 |   
		143 |   # INSECURE: No backup retention
		144 |   backup_retention_period = 0
		145 |   
		146 |   # INSECURE: Skip final snapshot
		147 |   skip_final_snapshot = true
		148 |   
		149 |   vpc_security_group_ids = [aws_security_group.database.id]
		150 | }

Check: CKV_AWS_161: "Ensure RDS database has IAM authentication enabled"
	FAILED for resource: aws_db_instance.demo
	File: /terraform/main.tf:123-150
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/ensure-rds-database-has-iam-authentication-enabled

		123 | resource "aws_db_instance" "demo" {
		124 |   identifier = "demo-database"
		125 |   
		126 |   engine         = "mysql"
		127 |   engine_version = "8.0"
		128 |   instance_class = "db.t3.micro"
		129 |   
		130 |   allocated_storage     = 20
		131 |   max_allocated_storage = 100
		132 |   
		133 |   db_name  = "demo"
		134 |   username = "admin"
		135 |   password = "password123"  # INSECURE: Hardcoded password!
		136 |   
		137 |   # INSECURE: Not encrypted
		138 |   storage_encrypted = false
		139 |   
		140 |   # INSECURE: Public access
		141 |   publicly_accessible = true
		142 |   
		143 |   # INSECURE: No backup retention
		144 |   backup_retention_period = 0
		145 |   
		146 |   # INSECURE: Skip final snapshot
		147 |   skip_final_snapshot = true
		148 |   
		149 |   vpc_security_group_ids = [aws_security_group.database.id]
		150 | }

Check: CKV_AWS_133: "Ensure that RDS instances has backup policy"
	FAILED for resource: aws_db_instance.demo
	File: /terraform/main.tf:123-150
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/ensure-that-rds-instances-have-backup-policy

		123 | resource "aws_db_instance" "demo" {
		124 |   identifier = "demo-database"
		125 |   
		126 |   engine         = "mysql"
		127 |   engine_version = "8.0"
		128 |   instance_class = "db.t3.micro"
		129 |   
		130 |   allocated_storage     = 20
		131 |   max_allocated_storage = 100
		132 |   
		133 |   db_name  = "demo"
		134 |   username = "admin"
		135 |   password = "password123"  # INSECURE: Hardcoded password!
		136 |   
		137 |   # INSECURE: Not encrypted
		138 |   storage_encrypted = false
		139 |   
		140 |   # INSECURE: Public access
		141 |   publicly_accessible = true
		142 |   
		143 |   # INSECURE: No backup retention
		144 |   backup_retention_period = 0
		145 |   
		146 |   # INSECURE: Skip final snapshot
		147 |   skip_final_snapshot = true
		148 |   
		149 |   vpc_security_group_ids = [aws_security_group.database.id]
		150 | }

Check: CKV_AWS_17: "Ensure all data stored in RDS is not publicly accessible"
	FAILED for resource: aws_db_instance.demo
	File: /terraform/main.tf:123-150
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/public-policies/public-2

		123 | resource "aws_db_instance" "demo" {
		124 |   identifier = "demo-database"
		125 |   
		126 |   engine         = "mysql"
		127 |   engine_version = "8.0"
		128 |   instance_class = "db.t3.micro"
		129 |   
		130 |   allocated_storage     = 20
		131 |   max_allocated_storage = 100
		132 |   
		133 |   db_name  = "demo"
		134 |   username = "admin"
		135 |   password = "password123"  # INSECURE: Hardcoded password!
		136 |   
		137 |   # INSECURE: Not encrypted
		138 |   storage_encrypted = false
		139 |   
		140 |   # INSECURE: Public access
		141 |   publicly_accessible = true
		142 |   
		143 |   # INSECURE: No backup retention
		144 |   backup_retention_period = 0
		145 |   
		146 |   # INSECURE: Skip final snapshot
		147 |   skip_final_snapshot = true
		148 |   
		149 |   vpc_security_group_ids = [aws_security_group.database.id]
		150 | }

Check: CKV_AWS_226: "Ensure DB instance gets all minor upgrades automatically"
	FAILED for resource: aws_db_instance.demo
	File: /terraform/main.tf:123-150
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/ensure-aws-db-instance-gets-all-minor-upgrades-automatically

		123 | resource "aws_db_instance" "demo" {
		124 |   identifier = "demo-database"
		125 |   
		126 |   engine         = "mysql"
		127 |   engine_version = "8.0"
		128 |   instance_class = "db.t3.micro"
		129 |   
		130 |   allocated_storage     = 20
		131 |   max_allocated_storage = 100
		132 |   
		133 |   db_name  = "demo"
		134 |   username = "admin"
		135 |   password = "password123"  # INSECURE: Hardcoded password!
		136 |   
		137 |   # INSECURE: Not encrypted
		138 |   storage_encrypted = false
		139 |   
		140 |   # INSECURE: Public access
		141 |   publicly_accessible = true
		142 |   
		143 |   # INSECURE: No backup retention
		144 |   backup_retention_period = 0
		145 |   
		146 |   # INSECURE: Skip final snapshot
		147 |   skip_final_snapshot = true
		148 |   
		149 |   vpc_security_group_ids = [aws_security_group.database.id]
		150 | }

Check: CKV_AWS_118: "Ensure that enhanced monitoring is enabled for Amazon RDS instances"
	FAILED for resource: aws_db_instance.demo
	File: /terraform/main.tf:123-150
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-logging-policies/ensure-that-enhanced-monitoring-is-enabled-for-amazon-rds-instances

		123 | resource "aws_db_instance" "demo" {
		124 |   identifier = "demo-database"
		125 |   
		126 |   engine         = "mysql"
		127 |   engine_version = "8.0"
		128 |   instance_class = "db.t3.micro"
		129 |   
		130 |   allocated_storage     = 20
		131 |   max_allocated_storage = 100
		132 |   
		133 |   db_name  = "demo"
		134 |   username = "admin"
		135 |   password = "password123"  # INSECURE: Hardcoded password!
		136 |   
		137 |   # INSECURE: Not encrypted
		138 |   storage_encrypted = false
		139 |   
		140 |   # INSECURE: Public access
		141 |   publicly_accessible = true
		142 |   
		143 |   # INSECURE: No backup retention
		144 |   backup_retention_period = 0
		145 |   
		146 |   # INSECURE: Skip final snapshot
		147 |   skip_final_snapshot = true
		148 |   
		149 |   vpc_security_group_ids = [aws_security_group.database.id]
		150 | }

Check: CKV_AWS_157: "Ensure that RDS instances have Multi-AZ enabled"
	FAILED for resource: aws_db_instance.demo
	File: /terraform/main.tf:123-150
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/general-73

		123 | resource "aws_db_instance" "demo" {
		124 |   identifier = "demo-database"
		125 |   
		126 |   engine         = "mysql"
		127 |   engine_version = "8.0"
		128 |   instance_class = "db.t3.micro"
		129 |   
		130 |   allocated_storage     = 20
		131 |   max_allocated_storage = 100
		132 |   
		133 |   db_name  = "demo"
		134 |   username = "admin"
		135 |   password = "password123"  # INSECURE: Hardcoded password!
		136 |   
		137 |   # INSECURE: Not encrypted
		138 |   storage_encrypted = false
		139 |   
		140 |   # INSECURE: Public access
		141 |   publicly_accessible = true
		142 |   
		143 |   # INSECURE: No backup retention
		144 |   backup_retention_period = 0
		145 |   
		146 |   # INSECURE: Skip final snapshot
		147 |   skip_final_snapshot = true
		148 |   
		149 |   vpc_security_group_ids = [aws_security_group.database.id]
		150 | }

Check: CKV_AWS_16: "Ensure all data stored in the RDS is securely encrypted at rest"
	FAILED for resource: aws_db_instance.demo
	File: /terraform/main.tf:123-150
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/general-4

		123 | resource "aws_db_instance" "demo" {
		124 |   identifier = "demo-database"
		125 |   
		126 |   engine         = "mysql"
		127 |   engine_version = "8.0"
		128 |   instance_class = "db.t3.micro"
		129 |   
		130 |   allocated_storage     = 20
		131 |   max_allocated_storage = 100
		132 |   
		133 |   db_name  = "demo"
		134 |   username = "admin"
		135 |   password = "password123"  # INSECURE: Hardcoded password!
		136 |   
		137 |   # INSECURE: Not encrypted
		138 |   storage_encrypted = false
		139 |   
		140 |   # INSECURE: Public access
		141 |   publicly_accessible = true
		142 |   
		143 |   # INSECURE: No backup retention
		144 |   backup_retention_period = 0
		145 |   
		146 |   # INSECURE: Skip final snapshot
		147 |   skip_final_snapshot = true
		148 |   
		149 |   vpc_security_group_ids = [aws_security_group.database.id]
		150 | }

Check: CKV_AWS_286: "Ensure IAM policies does not allow privilege escalation"
	FAILED for resource: aws_iam_policy.demo_policy
	File: /terraform/main.tf:168-183
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/bc-aws-286

		168 | resource "aws_iam_policy" "demo_policy" {
		169 |   name        = "demo-policy"
		170 |   description = "Demo policy with excessive permissions"
		171 | 
		172 |   policy = jsonencode({
		173 |     Version = "2012-10-17"
		174 |     Statement = [
		175 |       {
		176 |         # INSECURE: Wildcard permissions
		177 |         Effect = "Allow"
		178 |         Action = "*"  # INSECURE: All actions allowed!
		179 |         Resource = "*"  # INSECURE: All resources!
		180 |       },
		181 |     ]
		182 |   })
		183 | }

Check: CKV_AWS_287: "Ensure IAM policies does not allow credentials exposure"
	FAILED for resource: aws_iam_policy.demo_policy
	File: /terraform/main.tf:168-183
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/bc-aws-287

		168 | resource "aws_iam_policy" "demo_policy" {
		169 |   name        = "demo-policy"
		170 |   description = "Demo policy with excessive permissions"
		171 | 
		172 |   policy = jsonencode({
		173 |     Version = "2012-10-17"
		174 |     Statement = [
		175 |       {
		176 |         # INSECURE: Wildcard permissions
		177 |         Effect = "Allow"
		178 |         Action = "*"  # INSECURE: All actions allowed!
		179 |         Resource = "*"  # INSECURE: All resources!
		180 |       },
		181 |     ]
		182 |   })
		183 | }

Check: CKV_AWS_288: "Ensure IAM policies does not allow data exfiltration"
	FAILED for resource: aws_iam_policy.demo_policy
	File: /terraform/main.tf:168-183
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/bc-aws-288

		168 | resource "aws_iam_policy" "demo_policy" {
		169 |   name        = "demo-policy"
		170 |   description = "Demo policy with excessive permissions"
		171 | 
		172 |   policy = jsonencode({
		173 |     Version = "2012-10-17"
		174 |     Statement = [
		175 |       {
		176 |         # INSECURE: Wildcard permissions
		177 |         Effect = "Allow"
		178 |         Action = "*"  # INSECURE: All actions allowed!
		179 |         Resource = "*"  # INSECURE: All resources!
		180 |       },
		181 |     ]
		182 |   })
		183 | }

Check: CKV_AWS_289: "Ensure IAM policies does not allow permissions management / resource exposure without constraints"
	FAILED for resource: aws_iam_policy.demo_policy
	File: /terraform/main.tf:168-183
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/bc-aws-289

		168 | resource "aws_iam_policy" "demo_policy" {
		169 |   name        = "demo-policy"
		170 |   description = "Demo policy with excessive permissions"
		171 | 
		172 |   policy = jsonencode({
		173 |     Version = "2012-10-17"
		174 |     Statement = [
		175 |       {
		176 |         # INSECURE: Wildcard permissions
		177 |         Effect = "Allow"
		178 |         Action = "*"  # INSECURE: All actions allowed!
		179 |         Resource = "*"  # INSECURE: All resources!
		180 |       },
		181 |     ]
		182 |   })
		183 | }

Check: CKV_AWS_355: "Ensure no IAM policies documents allow "*" as a statement's resource for restrictable actions"
	FAILED for resource: aws_iam_policy.demo_policy
	File: /terraform/main.tf:168-183
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/bc-aws-355

		168 | resource "aws_iam_policy" "demo_policy" {
		169 |   name        = "demo-policy"
		170 |   description = "Demo policy with excessive permissions"
		171 | 
		172 |   policy = jsonencode({
		173 |     Version = "2012-10-17"
		174 |     Statement = [
		175 |       {
		176 |         # INSECURE: Wildcard permissions
		177 |         Effect = "Allow"
		178 |         Action = "*"  # INSECURE: All actions allowed!
		179 |         Resource = "*"  # INSECURE: All resources!
		180 |       },
		181 |     ]
		182 |   })
		183 | }

Check: CKV_AWS_290: "Ensure IAM policies does not allow write access without constraints"
	FAILED for resource: aws_iam_policy.demo_policy
	File: /terraform/main.tf:168-183
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/bc-aws-290

		168 | resource "aws_iam_policy" "demo_policy" {
		169 |   name        = "demo-policy"
		170 |   description = "Demo policy with excessive permissions"
		171 | 
		172 |   policy = jsonencode({
		173 |     Version = "2012-10-17"
		174 |     Statement = [
		175 |       {
		176 |         # INSECURE: Wildcard permissions
		177 |         Effect = "Allow"
		178 |         Action = "*"  # INSECURE: All actions allowed!
		179 |         Resource = "*"  # INSECURE: All resources!
		180 |       },
		181 |     ]
		182 |   })
		183 | }

Check: CKV_AWS_63: "Ensure no IAM policies documents allow "*" as a statement's actions"
	FAILED for resource: aws_iam_policy.demo_policy
	File: /terraform/main.tf:168-183
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/iam-48

		168 | resource "aws_iam_policy" "demo_policy" {
		169 |   name        = "demo-policy"
		170 |   description = "Demo policy with excessive permissions"
		171 | 
		172 |   policy = jsonencode({
		173 |     Version = "2012-10-17"
		174 |     Statement = [
		175 |       {
		176 |         # INSECURE: Wildcard permissions
		177 |         Effect = "Allow"
		178 |         Action = "*"  # INSECURE: All actions allowed!
		179 |         Resource = "*"  # INSECURE: All resources!
		180 |       },
		181 |     ]
		182 |   })
		183 | }

Check: CKV_AWS_62: "Ensure IAM policies that allow full "*-*" administrative privileges are not created"
	FAILED for resource: aws_iam_policy.demo_policy
	File: /terraform/main.tf:168-183
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/bc-aws-iam-45

		168 | resource "aws_iam_policy" "demo_policy" {
		169 |   name        = "demo-policy"
		170 |   description = "Demo policy with excessive permissions"
		171 | 
		172 |   policy = jsonencode({
		173 |     Version = "2012-10-17"
		174 |     Statement = [
		175 |       {
		176 |         # INSECURE: Wildcard permissions
		177 |         Effect = "Allow"
		178 |         Action = "*"  # INSECURE: All actions allowed!
		179 |         Resource = "*"  # INSECURE: All resources!
		180 |       },
		181 |     ]
		182 |   })
		183 | }

Check: CKV_AWS_18: "Ensure the S3 bucket has access logging enabled"
	FAILED for resource: aws_s3_bucket.demo_bucket
	File: /terraform/main.tf:17-19
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/s3-13-enable-logging

		17 | resource "aws_s3_bucket" "demo_bucket" {
		18 |   bucket = "demo-security-test-bucket-${random_string.suffix.result}"
		19 | }

Check: CKV_AWS_144: "Ensure that S3 bucket has cross-region replication enabled"
	FAILED for resource: aws_s3_bucket.demo_bucket
	File: /terraform/main.tf:17-19
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/ensure-that-s3-bucket-has-cross-region-replication-enabled

		17 | resource "aws_s3_bucket" "demo_bucket" {
		18 |   bucket = "demo-security-test-bucket-${random_string.suffix.result}"
		19 | }

Check: CKV2_AWS_61: "Ensure that an S3 bucket has a lifecycle configuration"
	FAILED for resource: aws_s3_bucket.demo_bucket
	File: /terraform/main.tf:17-19
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-logging-policies/bc-aws-2-61

		17 | resource "aws_s3_bucket" "demo_bucket" {
		18 |   bucket = "demo-security-test-bucket-${random_string.suffix.result}"
		19 | }

Check: CKV2_AWS_60: "Ensure RDS instance with copy tags to snapshots is enabled"
	FAILED for resource: aws_db_instance.demo
	File: /terraform/main.tf:123-150
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/bc-aws-2-60

		123 | resource "aws_db_instance" "demo" {
		124 |   identifier = "demo-database"
		125 |   
		126 |   engine         = "mysql"
		127 |   engine_version = "8.0"
		128 |   instance_class = "db.t3.micro"
		129 |   
		130 |   allocated_storage     = 20
		131 |   max_allocated_storage = 100
		132 |   
		133 |   db_name  = "demo"
		134 |   username = "admin"
		135 |   password = "password123"  # INSECURE: Hardcoded password!
		136 |   
		137 |   # INSECURE: Not encrypted
		138 |   storage_encrypted = false
		139 |   
		140 |   # INSECURE: Public access
		141 |   publicly_accessible = true
		142 |   
		143 |   # INSECURE: No backup retention
		144 |   backup_retention_period = 0
		145 |   
		146 |   # INSECURE: Skip final snapshot
		147 |   skip_final_snapshot = true
		148 |   
		149 |   vpc_security_group_ids = [aws_security_group.database.id]
		150 | }

Check: CKV_AWS_145: "Ensure that S3 buckets are encrypted with KMS by default"
	FAILED for resource: aws_s3_bucket.demo_bucket
	File: /terraform/main.tf:17-19
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/ensure-that-s3-buckets-are-encrypted-with-kms-by-default

		17 | resource "aws_s3_bucket" "demo_bucket" {
		18 |   bucket = "demo-security-test-bucket-${random_string.suffix.result}"
		19 | }

Check: CKV2_AWS_6: "Ensure that S3 bucket has a Public Access block"
	FAILED for resource: aws_s3_bucket.demo_bucket
	File: /terraform/main.tf:17-19
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/s3-bucket-should-have-public-access-blocks-defaults-to-false-if-the-public-access-block-is-not-attached

		17 | resource "aws_s3_bucket" "demo_bucket" {
		18 |   bucket = "demo-security-test-bucket-${random_string.suffix.result}"
		19 | }

Check: CKV_AWS_20: "S3 Bucket has an ACL defined which allows public READ access."
	FAILED for resource: aws_s3_bucket.demo_bucket
	File: /terraform/main.tf:17-19
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/s3-1-acl-read-permissions-everyone

		17 | resource "aws_s3_bucket" "demo_bucket" {
		18 |   bucket = "demo-security-test-bucket-${random_string.suffix.result}"
		19 | }

Check: CKV2_AWS_62: "Ensure S3 buckets should have event notifications enabled"
	FAILED for resource: aws_s3_bucket.demo_bucket
	File: /terraform/main.tf:17-19
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-logging-policies/bc-aws-2-62

		17 | resource "aws_s3_bucket" "demo_bucket" {
		18 |   bucket = "demo-security-test-bucket-${random_string.suffix.result}"
		19 | }

Check: CKV2_AWS_41: "Ensure an IAM role is attached to EC2 instance"
	FAILED for resource: aws_instance.web
	File: /terraform/main.tf:89-120
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/ensure-an-iam-role-is-attached-to-ec2-instance

		89  | resource "aws_instance" "web" {
		90  |   ami           = "ami-0c94855ba95b798c7"  # Amazon Linux 2 in us-west-2
		91  |   instance_type = "t3.micro"
		92  |   
		93  |   # INSECURE: No encryption for EBS
		94  |   root_block_device {
		95  |     volume_type = "gp3"
		96  |     volume_size = 20
		97  |     encrypted   = false  # INSECURE!
		98  |   }
		99  | 
		100 |   vpc_security_group_ids = [aws_security_group.web.id]
		101 | 
		102 |   # INSECURE: Hardcoded user data (could contain secrets)
		103 |   user_data = base64encode(<<-EOF
		104 |               #!/bin/bash
		105 |               yum update -y
		106 |               yum install -y httpd
		107 |               systemctl start httpd
		108 |               systemctl enable httpd
		109 |               echo '<h1>Demo Web Server</h1>' > /var/www/html/index.html
		110 |               # INSECURE: Hardcoded API key (for testing secret detection)
		111 |               export API_KEY=sk-1234567890abcdef1234567890abcdef
		112 |               EOF
		113 |   )
		114 | 
		115 |   tags = {
		116 |     Name        = "demo-web-server"
		117 |     Environment = "testing"
		118 |     # INSECURE: Missing required tags for compliance
		119 |   }
		120 | }

Check: CKV2_AWS_65: "Ensure access control lists for S3 buckets are disabled"
	FAILED for resource: aws_s3_bucket_ownership_controls.demo_bucket_acl_ownership
	File: /terraform/main.tf:40-46
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/bc-aws-general-112

		40 | resource "aws_s3_bucket_ownership_controls" "demo_bucket_acl_ownership" {
		41 |   bucket = aws_s3_bucket.demo_bucket.id
		42 |   
		43 |   rule {
		44 |     object_ownership = "BucketOwnerPreferred"
		45 |   }
		46 | }

Check: CKV_AWS_21: "Ensure all data stored in the S3 bucket have versioning enabled"
	FAILED for resource: aws_s3_bucket.demo_bucket
	File: /terraform/main.tf:17-19
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/s3-16-enable-versioning

		17 | resource "aws_s3_bucket" "demo_bucket" {
		18 |   bucket = "demo-security-test-bucket-${random_string.suffix.result}"
		19 | }

Check: CKV2_AWS_40: "Ensure AWS IAM policy does not allow full IAM privileges"
	FAILED for resource: aws_iam_policy.demo_policy
	File: /terraform/main.tf:168-183
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/bc-aws-2-40

		168 | resource "aws_iam_policy" "demo_policy" {
		169 |   name        = "demo-policy"
		170 |   description = "Demo policy with excessive permissions"
		171 | 
		172 |   policy = jsonencode({
		173 |     Version = "2012-10-17"
		174 |     Statement = [
		175 |       {
		176 |         # INSECURE: Wildcard permissions
		177 |         Effect = "Allow"
		178 |         Action = "*"  # INSECURE: All actions allowed!
		179 |         Resource = "*"  # INSECURE: All resources!
		180 |       },
		181 |     ]
		182 |   })
		183 | }

dockerfile scan results:

Passed checks: 69, Failed checks: 5, Skipped checks: 0

Check: CKV_DOCKER_11: "Ensure From Alias are unique for multistage builds."
	PASSED for resource: /docker/Dockerfile.
	File: /docker/Dockerfile:1-40
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-from-alias-is-unique-for-multistage-builds
Check: CKV_DOCKER_9: "Ensure that APT isn't used"
	PASSED for resource: /docker/Dockerfile.
	File: /docker/Dockerfile:1-40
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-apt-is-not-used
Check: CKV_DOCKER_5: "Ensure update instructions are not use alone in the Dockerfile"
	PASSED for resource: /docker/Dockerfile.
	File: /docker/Dockerfile:1-40
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-update-instructions-are-not-used-alone-in-the-dockerfile
Check: CKV_DOCKER_10: "Ensure that WORKDIR values are absolute paths"
	PASSED for resource: /docker/Dockerfile.
	File: /docker/Dockerfile:1-40
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-workdir-values-are-absolute-paths
Check: CKV2_DOCKER_17: "Ensure that 'chpasswd' is not used to set or remove passwords"
	PASSED for resource: /docker/Dockerfile.RUN
	File: /docker/Dockerfile:16-25
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/bc-docker-2-17
Check: CKV2_DOCKER_17: "Ensure that 'chpasswd' is not used to set or remove passwords"
	PASSED for resource: /docker/Dockerfile.RUN
	File: /docker/Dockerfile:31-31
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/bc-docker-2-17
Check: CKV2_DOCKER_17: "Ensure that 'chpasswd' is not used to set or remove passwords"
	PASSED for resource: /docker/Dockerfile.RUN
	File: /docker/Dockerfile:34-34
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/bc-docker-2-17
Check: CKV2_DOCKER_1: "Ensure that sudo isn't used"
	PASSED for resource: /docker/Dockerfile.RUN
	File: /docker/Dockerfile:31-31
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-dont-use-sudo
Check: CKV2_DOCKER_1: "Ensure that sudo isn't used"
	PASSED for resource: /docker/Dockerfile.RUN
	File: /docker/Dockerfile:34-34
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-dont-use-sudo
Check: CKV2_DOCKER_6: "Ensure that certificate validation isn't disabled with the NODE_TLS_REJECT_UNAUTHORIZED environment variable"
	PASSED for resource: /docker/Dockerfile.ENV
	File: /docker/Dockerfile:9-9
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-node-tls-secure
Check: CKV2_DOCKER_6: "Ensure that certificate validation isn't disabled with the NODE_TLS_REJECT_UNAUTHORIZED environment variable"
	PASSED for resource: /docker/Dockerfile.ENV
	File: /docker/Dockerfile:10-10
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-node-tls-secure
Check: CKV2_DOCKER_6: "Ensure that certificate validation isn't disabled with the NODE_TLS_REJECT_UNAUTHORIZED environment variable"
	PASSED for resource: /docker/Dockerfile.ENV
	File: /docker/Dockerfile:11-11
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-node-tls-secure
Check: CKV2_DOCKER_6: "Ensure that certificate validation isn't disabled with the NODE_TLS_REJECT_UNAUTHORIZED environment variable"
	PASSED for resource: /docker/Dockerfile.RUN
	File: /docker/Dockerfile:16-25
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-node-tls-secure
Check: CKV2_DOCKER_6: "Ensure that certificate validation isn't disabled with the NODE_TLS_REJECT_UNAUTHORIZED environment variable"
	PASSED for resource: /docker/Dockerfile.RUN
	File: /docker/Dockerfile:31-31
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-node-tls-secure
Check: CKV2_DOCKER_6: "Ensure that certificate validation isn't disabled with the NODE_TLS_REJECT_UNAUTHORIZED environment variable"
	PASSED for resource: /docker/Dockerfile.RUN
	File: /docker/Dockerfile:34-34
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-node-tls-secure
Check: CKV2_DOCKER_14: "Ensure that certificate validation isn't disabled for git by setting the environment variable 'GIT_SSL_NO_VERIFY' to any value"
	PASSED for resource: /docker/Dockerfile.ENV
	File: /docker/Dockerfile:9-9
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-git-ssl
Check: CKV2_DOCKER_14: "Ensure that certificate validation isn't disabled for git by setting the environment variable 'GIT_SSL_NO_VERIFY' to any value"
	PASSED for resource: /docker/Dockerfile.ENV
	File: /docker/Dockerfile:10-10
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-git-ssl
Check: CKV2_DOCKER_14: "Ensure that certificate validation isn't disabled for git by setting the environment variable 'GIT_SSL_NO_VERIFY' to any value"
	PASSED for resource: /docker/Dockerfile.ENV
	File: /docker/Dockerfile:11-11
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-git-ssl
Check: CKV2_DOCKER_14: "Ensure that certificate validation isn't disabled for git by setting the environment variable 'GIT_SSL_NO_VERIFY' to any value"
	PASSED for resource: /docker/Dockerfile.RUN
	File: /docker/Dockerfile:16-25
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-git-ssl
Check: CKV2_DOCKER_14: "Ensure that certificate validation isn't disabled for git by setting the environment variable 'GIT_SSL_NO_VERIFY' to any value"
	PASSED for resource: /docker/Dockerfile.RUN
	File: /docker/Dockerfile:31-31
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-git-ssl
Check: CKV2_DOCKER_14: "Ensure that certificate validation isn't disabled for git by setting the environment variable 'GIT_SSL_NO_VERIFY' to any value"
	PASSED for resource: /docker/Dockerfile.RUN
	File: /docker/Dockerfile:34-34
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-git-ssl
Check: CKV2_DOCKER_5: "Ensure that certificate validation isn't disabled with the PYTHONHTTPSVERIFY environment variable"
	PASSED for resource: /docker/Dockerfile.ENV
	File: /docker/Dockerfile:9-9
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-PYTHONHTTPSVERIFY-secure
Check: CKV2_DOCKER_5: "Ensure that certificate validation isn't disabled with the PYTHONHTTPSVERIFY environment variable"
	PASSED for resource: /docker/Dockerfile.ENV
	File: /docker/Dockerfile:10-10
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-PYTHONHTTPSVERIFY-secure
Check: CKV2_DOCKER_5: "Ensure that certificate validation isn't disabled with the PYTHONHTTPSVERIFY environment variable"
	PASSED for resource: /docker/Dockerfile.ENV
	File: /docker/Dockerfile:11-11
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-PYTHONHTTPSVERIFY-secure
Check: CKV2_DOCKER_5: "Ensure that certificate validation isn't disabled with the PYTHONHTTPSVERIFY environment variable"
	PASSED for resource: /docker/Dockerfile.RUN
	File: /docker/Dockerfile:16-25
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-PYTHONHTTPSVERIFY-secure
Check: CKV2_DOCKER_5: "Ensure that certificate validation isn't disabled with the PYTHONHTTPSVERIFY environment variable"
	PASSED for resource: /docker/Dockerfile.RUN
	File: /docker/Dockerfile:31-31
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-PYTHONHTTPSVERIFY-secure
Check: CKV2_DOCKER_5: "Ensure that certificate validation isn't disabled with the PYTHONHTTPSVERIFY environment variable"
	PASSED for resource: /docker/Dockerfile.RUN
	File: /docker/Dockerfile:34-34
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-PYTHONHTTPSVERIFY-secure
Check: CKV2_DOCKER_13: "Ensure that certificate validation isn't disabled for npm or yarn by setting the option strict-ssl to false"
	PASSED for resource: /docker/Dockerfile.RUN
	File: /docker/Dockerfile:16-25
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-npm-strict-ssl2
Check: CKV2_DOCKER_13: "Ensure that certificate validation isn't disabled for npm or yarn by setting the option strict-ssl to false"
	PASSED for resource: /docker/Dockerfile.RUN
	File: /docker/Dockerfile:31-31
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-npm-strict-ssl2
Check: CKV2_DOCKER_13: "Ensure that certificate validation isn't disabled for npm or yarn by setting the option strict-ssl to false"
	PASSED for resource: /docker/Dockerfile.RUN
	File: /docker/Dockerfile:34-34
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-npm-strict-ssl2
Check: CKV2_DOCKER_9: "Ensure that packages with untrusted or missing GPG signatures are not used by dnf, tdnf, or yum via the '--nogpgcheck' option"
	PASSED for resource: /docker/Dockerfile.RUN
	File: /docker/Dockerfile:16-25
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-yum-signed
Check: CKV2_DOCKER_9: "Ensure that packages with untrusted or missing GPG signatures are not used by dnf, tdnf, or yum via the '--nogpgcheck' option"
	PASSED for resource: /docker/Dockerfile.RUN
	File: /docker/Dockerfile:31-31
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-yum-signed
Check: CKV2_DOCKER_9: "Ensure that packages with untrusted or missing GPG signatures are not used by dnf, tdnf, or yum via the '--nogpgcheck' option"
	PASSED for resource: /docker/Dockerfile.RUN
	File: /docker/Dockerfile:34-34
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-yum-signed
Check: CKV2_DOCKER_8: "Ensure that packages with untrusted or missing signatures are not used by apt-get via the '--allow-unauthenticated' option"
	PASSED for resource: /docker/Dockerfile.RUN
	File: /docker/Dockerfile:16-25
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-apt-authenticated
Check: CKV2_DOCKER_8: "Ensure that packages with untrusted or missing signatures are not used by apt-get via the '--allow-unauthenticated' option"
	PASSED for resource: /docker/Dockerfile.RUN
	File: /docker/Dockerfile:31-31
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-apt-authenticated
Check: CKV2_DOCKER_8: "Ensure that packages with untrusted or missing signatures are not used by apt-get via the '--allow-unauthenticated' option"
	PASSED for resource: /docker/Dockerfile.RUN
	File: /docker/Dockerfile:34-34
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-apt-authenticated
Check: CKV2_DOCKER_10: "Ensure that packages with untrusted or missing signatures are not used by rpm via the '--nodigest', '--nosignature', '--noverify', or '--nofiledigest' options"
	PASSED for resource: /docker/Dockerfile.RUN
	File: /docker/Dockerfile:16-25
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-rpm-signed
Check: CKV2_DOCKER_10: "Ensure that packages with untrusted or missing signatures are not used by rpm via the '--nodigest', '--nosignature', '--noverify', or '--nofiledigest' options"
	PASSED for resource: /docker/Dockerfile.RUN
	File: /docker/Dockerfile:31-31
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-rpm-signed
Check: CKV2_DOCKER_10: "Ensure that packages with untrusted or missing signatures are not used by rpm via the '--nodigest', '--nosignature', '--noverify', or '--nofiledigest' options"
	PASSED for resource: /docker/Dockerfile.RUN
	File: /docker/Dockerfile:34-34
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-rpm-signed
Check: CKV2_DOCKER_2: "Ensure that certificate validation isn't disabled with curl"
	PASSED for resource: /docker/Dockerfile.RUN
	File: /docker/Dockerfile:16-25
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-curl-secure
Check: CKV2_DOCKER_2: "Ensure that certificate validation isn't disabled with curl"
	PASSED for resource: /docker/Dockerfile.RUN
	File: /docker/Dockerfile:31-31
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-curl-secure
Check: CKV2_DOCKER_2: "Ensure that certificate validation isn't disabled with curl"
	PASSED for resource: /docker/Dockerfile.RUN
	File: /docker/Dockerfile:34-34
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-curl-secure
Check: CKV2_DOCKER_11: "Ensure that the '--force-yes' option is not used, as it disables signature validation and allows packages to be downgraded which can leave the system in a broken or inconsistent state"
	PASSED for resource: /docker/Dockerfile.RUN
	File: /docker/Dockerfile:16-25
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-apt-force
Check: CKV2_DOCKER_11: "Ensure that the '--force-yes' option is not used, as it disables signature validation and allows packages to be downgraded which can leave the system in a broken or inconsistent state"
	PASSED for resource: /docker/Dockerfile.RUN
	File: /docker/Dockerfile:31-31
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-apt-force
Check: CKV2_DOCKER_11: "Ensure that the '--force-yes' option is not used, as it disables signature validation and allows packages to be downgraded which can leave the system in a broken or inconsistent state"
	PASSED for resource: /docker/Dockerfile.RUN
	File: /docker/Dockerfile:34-34
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-apt-force
Check: CKV2_DOCKER_4: "Ensure that certificate validation isn't disabled with the pip '--trusted-host' option"
	PASSED for resource: /docker/Dockerfile.RUN
	File: /docker/Dockerfile:16-25
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-pip-secure
Check: CKV2_DOCKER_4: "Ensure that certificate validation isn't disabled with the pip '--trusted-host' option"
	PASSED for resource: /docker/Dockerfile.RUN
	File: /docker/Dockerfile:31-31
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-pip-secure
Check: CKV2_DOCKER_4: "Ensure that certificate validation isn't disabled with the pip '--trusted-host' option"
	PASSED for resource: /docker/Dockerfile.RUN
	File: /docker/Dockerfile:34-34
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-pip-secure
Check: CKV2_DOCKER_15: "Ensure that the yum and dnf package managers are not configured to disable SSL certificate validation via the 'sslverify' configuration option"
	PASSED for resource: /docker/Dockerfile.RUN
	File: /docker/Dockerfile:16-25
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-yum-ssl
Check: CKV2_DOCKER_15: "Ensure that the yum and dnf package managers are not configured to disable SSL certificate validation via the 'sslverify' configuration option"
	PASSED for resource: /docker/Dockerfile.RUN
	File: /docker/Dockerfile:31-31
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-yum-ssl
Check: CKV2_DOCKER_15: "Ensure that the yum and dnf package managers are not configured to disable SSL certificate validation via the 'sslverify' configuration option"
	PASSED for resource: /docker/Dockerfile.RUN
	File: /docker/Dockerfile:34-34
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-yum-ssl
Check: CKV2_DOCKER_3: "Ensure that certificate validation isn't disabled with wget"
	PASSED for resource: /docker/Dockerfile.RUN
	File: /docker/Dockerfile:16-25
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-wget-secure
Check: CKV2_DOCKER_3: "Ensure that certificate validation isn't disabled with wget"
	PASSED for resource: /docker/Dockerfile.RUN
	File: /docker/Dockerfile:31-31
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-wget-secure
Check: CKV2_DOCKER_3: "Ensure that certificate validation isn't disabled with wget"
	PASSED for resource: /docker/Dockerfile.RUN
	File: /docker/Dockerfile:34-34
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-wget-secure
Check: CKV2_DOCKER_12: "Ensure that certificate validation isn't disabled for npm via the 'NPM_CONFIG_STRICT_SSL' environment variable"
	PASSED for resource: /docker/Dockerfile.ENV
	File: /docker/Dockerfile:9-9
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-npm-strict-ssl
Check: CKV2_DOCKER_12: "Ensure that certificate validation isn't disabled for npm via the 'NPM_CONFIG_STRICT_SSL' environment variable"
	PASSED for resource: /docker/Dockerfile.ENV
	File: /docker/Dockerfile:10-10
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-npm-strict-ssl
Check: CKV2_DOCKER_12: "Ensure that certificate validation isn't disabled for npm via the 'NPM_CONFIG_STRICT_SSL' environment variable"
	PASSED for resource: /docker/Dockerfile.ENV
	File: /docker/Dockerfile:11-11
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-npm-strict-ssl
Check: CKV2_DOCKER_12: "Ensure that certificate validation isn't disabled for npm via the 'NPM_CONFIG_STRICT_SSL' environment variable"
	PASSED for resource: /docker/Dockerfile.RUN
	File: /docker/Dockerfile:16-25
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-npm-strict-ssl
Check: CKV2_DOCKER_12: "Ensure that certificate validation isn't disabled for npm via the 'NPM_CONFIG_STRICT_SSL' environment variable"
	PASSED for resource: /docker/Dockerfile.RUN
	File: /docker/Dockerfile:31-31
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-npm-strict-ssl
Check: CKV2_DOCKER_12: "Ensure that certificate validation isn't disabled for npm via the 'NPM_CONFIG_STRICT_SSL' environment variable"
	PASSED for resource: /docker/Dockerfile.RUN
	File: /docker/Dockerfile:34-34
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-npm-strict-ssl
Check: CKV2_DOCKER_16: "Ensure that certificate validation isn't disabled with pip via the 'PIP_TRUSTED_HOST' environment variable"
	PASSED for resource: /docker/Dockerfile.ENV
	File: /docker/Dockerfile:9-9
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-pip-trusted-host
Check: CKV2_DOCKER_16: "Ensure that certificate validation isn't disabled with pip via the 'PIP_TRUSTED_HOST' environment variable"
	PASSED for resource: /docker/Dockerfile.ENV
	File: /docker/Dockerfile:10-10
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-pip-trusted-host
Check: CKV2_DOCKER_16: "Ensure that certificate validation isn't disabled with pip via the 'PIP_TRUSTED_HOST' environment variable"
	PASSED for resource: /docker/Dockerfile.ENV
	File: /docker/Dockerfile:11-11
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-pip-trusted-host
Check: CKV2_DOCKER_16: "Ensure that certificate validation isn't disabled with pip via the 'PIP_TRUSTED_HOST' environment variable"
	PASSED for resource: /docker/Dockerfile.RUN
	File: /docker/Dockerfile:16-25
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-pip-trusted-host
Check: CKV2_DOCKER_16: "Ensure that certificate validation isn't disabled with pip via the 'PIP_TRUSTED_HOST' environment variable"
	PASSED for resource: /docker/Dockerfile.RUN
	File: /docker/Dockerfile:31-31
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-pip-trusted-host
Check: CKV2_DOCKER_16: "Ensure that certificate validation isn't disabled with pip via the 'PIP_TRUSTED_HOST' environment variable"
	PASSED for resource: /docker/Dockerfile.RUN
	File: /docker/Dockerfile:34-34
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-pip-trusted-host
Check: CKV2_DOCKER_7: "Ensure that packages with untrusted or missing signatures are not used by apk via the '--allow-untrusted' option"
	PASSED for resource: /docker/Dockerfile.RUN
	File: /docker/Dockerfile:16-25
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-apk-trusted
Check: CKV2_DOCKER_7: "Ensure that packages with untrusted or missing signatures are not used by apk via the '--allow-untrusted' option"
	PASSED for resource: /docker/Dockerfile.RUN
	File: /docker/Dockerfile:31-31
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-apk-trusted
Check: CKV2_DOCKER_7: "Ensure that packages with untrusted or missing signatures are not used by apk via the '--allow-untrusted' option"
	PASSED for resource: /docker/Dockerfile.RUN
	File: /docker/Dockerfile:34-34
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-apk-trusted
Check: CKV_DOCKER_1: "Ensure port 22 is not exposed"
	FAILED for resource: /docker/Dockerfile.EXPOSE
	File: /docker/Dockerfile:37-37
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-port-22-is-not-exposed

		37 | EXPOSE 3000 8080 9000 22

Check: CKV_DOCKER_7: "Ensure the base image uses a non latest version tag"
	FAILED for resource: /docker/Dockerfile.FROM
	File: /docker/Dockerfile:4-4
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-the-base-image-uses-a-non-latest-version-tag

		4 | FROM node:latest

Check: CKV_DOCKER_2: "Ensure that HEALTHCHECK instructions have been added to container images"
	FAILED for resource: /docker/Dockerfile.
	File: /docker/Dockerfile:1-40
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-that-healthcheck-instructions-have-been-added-to-container-images

		1  | # INSECURE Dockerfile for Testing Security Scanners
		2  | 
		3  | # INSECURE: Using latest tag (not pinned)
		4  | FROM node:latest
		5  | 
		6  | # INSECURE: Running as root (no USER instruction)
		7  | 
		8  | # INSECURE: Hardcoded secrets in environment
		9  | ENV API_KEY=sk-1234567890abcdef1234567890abcdef
		10 | ENV DATABASE_PASSWORD=supersecret123
		11 | ENV JWT_SECRET=my-super-secret-jwt-key
		12 | 
		13 | WORKDIR /app
		14 | 
		15 | # INSECURE: Installing unnecessary packages that increase attack surface
		16 | RUN apt-get update && apt-get install -y \
		17 |     curl \
		18 |     wget \
		19 |     vim \
		20 |     git \
		21 |     sudo \
		22 |     ssh \
		23 |     telnet \
		24 |     ftp \
		25 |     && rm -rf /var/lib/apt/lists/*
		26 | 
		27 | # INSECURE: Copying everything (no .dockerignore)
		28 | COPY . .
		29 | 
		30 | # INSECURE: Installing packages with npm (not npm ci)
		31 | RUN npm install
		32 | 
		33 | # INSECURE: Installing packages as root with elevated privileges
		34 | RUN npm install -g nodemon pm2
		35 | 
		36 | # INSECURE: Exposing unnecessary ports
		37 | EXPOSE 3000 8080 9000 22
		38 | 
		39 | # INSECURE: Running application as root
		40 | CMD ["node", "server.js"]
Check: CKV_DOCKER_3: "Ensure that a user for the container has been created"
	FAILED for resource: /docker/Dockerfile.
	File: /docker/Dockerfile:1-40
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-that-a-user-for-the-container-has-been-created

		1  | # INSECURE Dockerfile for Testing Security Scanners
		2  | 
		3  | # INSECURE: Using latest tag (not pinned)
		4  | FROM node:latest
		5  | 
		6  | # INSECURE: Running as root (no USER instruction)
		7  | 
		8  | # INSECURE: Hardcoded secrets in environment
		9  | ENV API_KEY=sk-1234567890abcdef1234567890abcdef
		10 | ENV DATABASE_PASSWORD=supersecret123
		11 | ENV JWT_SECRET=my-super-secret-jwt-key
		12 | 
		13 | WORKDIR /app
		14 | 
		15 | # INSECURE: Installing unnecessary packages that increase attack surface
		16 | RUN apt-get update && apt-get install -y \
		17 |     curl \
		18 |     wget \
		19 |     vim \
		20 |     git \
		21 |     sudo \
		22 |     ssh \
		23 |     telnet \
		24 |     ftp \
		25 |     && rm -rf /var/lib/apt/lists/*
		26 | 
		27 | # INSECURE: Copying everything (no .dockerignore)
		28 | COPY . .
		29 | 
		30 | # INSECURE: Installing packages with npm (not npm ci)
		31 | RUN npm install
		32 | 
		33 | # INSECURE: Installing packages as root with elevated privileges
		34 | RUN npm install -g nodemon pm2
		35 | 
		36 | # INSECURE: Exposing unnecessary ports
		37 | EXPOSE 3000 8080 9000 22
		38 | 
		39 | # INSECURE: Running application as root
		40 | CMD ["node", "server.js"]
Check: CKV2_DOCKER_1: "Ensure that sudo isn't used"
	FAILED for resource: /docker/Dockerfile.RUN
	File: /docker/Dockerfile:16-25
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/docker-policies/docker-policy-index/ensure-docker-dont-use-sudo

		16 | RUN apt-get update && apt-get install -y \
		17 |     curl \
		18 |     wget \
		19 |     vim \
		20 |     git \
		21 |     sudo \
		22 |     ssh \
		23 |     telnet \
		24 |     ftp \
		25 |     && rm -rf /var/lib/apt/lists/*

secrets scan results:

Passed checks: 0, Failed checks: 3, Skipped checks: 0

Check: CKV_SECRET_6: "Base64 High Entropy String"
	FAILED for resource: db0295c3d2c1ae7a9f31f25d3e599d316f9da95a
	File: /docker/docker-compose.yml:32-33
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/secrets-policies/secrets-policy-index/git-secrets-6

		32 |       MYSQL_ROOT_PASSWORD: roo**********

Check: CKV_SECRET_6: "Base64 High Entropy String"
	FAILED for resource: cbfdac6008f9cab4083784cbd1874f76618d2a97
	File: /docker/docker-compose.yml:35-36
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/secrets-policies/secrets-policy-index/git-secrets-6

		35 |       MYSQL_PASSWORD: pa**********

Check: CKV_SECRET_6: "Base64 High Entropy String"
	FAILED for resource: 1043071fb8eddffe7fd732ed7b77935864b76701
	File: /terraform/main.tf:111-112
	Guide: https://docs.prismacloud.io/en/enterprise-edition/policy-reference/secrets-policies/secrets-policy-index/git-secrets-6

		111 |               export API_KEY=sk-123**********

github_actions scan results:

Passed checks: 216, Failed checks: 8, Skipped checks: 0

Check: CKV_GHA_5: "Found artifact build without evidence of cosign sign execution in pipeline"
	PASSED for resource: jobs
	File: /.github/workflows/security-scan.yml:13-96
Check: CKV_GHA_4: "Suspicious use of netcat with IP address"
	PASSED for resource: jobs(security-scan)
	File: /.github/workflows/security-scan.yml:14-96
Check: CKV_GHA_6: "Found artifact build without evidence of cosign sbom attestation in pipeline"
	PASSED for resource: jobs
	File: /.github/workflows/security-scan.yml:13-96
Check: CKV_GHA_2: "Ensure run commands are not vulnerable to shell injection"
	PASSED for resource: jobs(security-scan)
	File: /.github/workflows/security-scan.yml:14-96
Check: CKV_GHA_3: "Suspicious use of curl with secrets"
	PASSED for resource: jobs(security-scan)
	File: /.github/workflows/security-scan.yml:14-96
Check: CKV_GHA_1: "Ensure ACTIONS_ALLOW_UNSECURE_COMMANDS isn't true on environment variables"
	PASSED for resource: jobs(security-scan)
	File: /.github/workflows/security-scan.yml:14-96
Check: CKV_GHA_7: "The build output cannot be affected by user parameters other than the build entry point and the top-level source location. GitHub Actions workflow_dispatch inputs MUST be empty. "
	PASSED for resource: on(Security Scan with Station Agents)
	File: /.github/workflows/security-scan.yml:4-13
Check: CKV_GHA_4: "Suspicious use of netcat with IP address"
	PASSED for resource: jobs(security-scan).steps[1](Checkout Code)
	File: /.github/workflows/security-scan.yml:17-21
Check: CKV_GHA_4: "Suspicious use of netcat with IP address"
	PASSED for resource: jobs(security-scan).steps[2](Install Station CLI)
	File: /.github/workflows/security-scan.yml:20-26
Check: CKV_GHA_4: "Suspicious use of netcat with IP address"
	PASSED for resource: jobs(security-scan).steps[3](Setup Station Environment)
	File: /.github/workflows/security-scan.yml:25-31
Check: CKV_GHA_4: "Suspicious use of netcat with IP address"
	PASSED for resource: jobs(security-scan).steps[4](Install Security Scanner Bundle)
	File: /.github/workflows/security-scan.yml:30-37
Check: CKV_GHA_4: "Suspicious use of netcat with IP address"
	PASSED for resource: jobs(security-scan).steps[5](Run Terraform Security Scan)
	File: /.github/workflows/security-scan.yml:36-45
Check: CKV_GHA_4: "Suspicious use of netcat with IP address"
	PASSED for resource: jobs(security-scan).steps[6](Run Container Security Scan)
	File: /.github/workflows/security-scan.yml:44-53
Check: CKV_GHA_4: "Suspicious use of netcat with IP address"
	PASSED for resource: jobs(security-scan).steps[7](Run Code Vulnerability Scan)
	File: /.github/workflows/security-scan.yml:52-61
Check: CKV_GHA_4: "Suspicious use of netcat with IP address"
	PASSED for resource: jobs(security-scan).steps[8](Generate Security Report)
	File: /.github/workflows/security-scan.yml:60-76
Check: CKV_GHA_4: "Suspicious use of netcat with IP address"
	PASSED for resource: jobs(security-scan).steps[9](Comment PR with Results)
	File: /.github/workflows/security-scan.yml:75-96
Check: CKV_GHA_2: "Ensure run commands are not vulnerable to shell injection"
	PASSED for resource: jobs(security-scan).steps[1](Checkout Code)
	File: /.github/workflows/security-scan.yml:17-21
Check: CKV_GHA_2: "Ensure run commands are not vulnerable to shell injection"
	PASSED for resource: jobs(security-scan).steps[2](Install Station CLI)
	File: /.github/workflows/security-scan.yml:20-26
Check: CKV_GHA_2: "Ensure run commands are not vulnerable to shell injection"
	PASSED for resource: jobs(security-scan).steps[3](Setup Station Environment)
	File: /.github/workflows/security-scan.yml:25-31
Check: CKV_GHA_2: "Ensure run commands are not vulnerable to shell injection"
	PASSED for resource: jobs(security-scan).steps[4](Install Security Scanner Bundle)
	File: /.github/workflows/security-scan.yml:30-37
Check: CKV_GHA_2: "Ensure run commands are not vulnerable to shell injection"
	PASSED for resource: jobs(security-scan).steps[5](Run Terraform Security Scan)
	File: /.github/workflows/security-scan.yml:36-45
Check: CKV_GHA_2: "Ensure run commands are not vulnerable to shell injection"
	PASSED for resource: jobs(security-scan).steps[6](Run Container Security Scan)
	File: /.github/workflows/security-scan.yml:44-53
Check: CKV_GHA_2: "Ensure run commands are not vulnerable to shell injection"
	PASSED for resource: jobs(security-scan).steps[7](Run Code Vulnerability Scan)
	File: /.github/workflows/security-scan.yml:52-61
Check: CKV_GHA_2: "Ensure run commands are not vulnerable to shell injection"
	PASSED for resource: jobs(security-scan).steps[8](Generate Security Report)
	File: /.github/workflows/security-scan.yml:60-76
Check: CKV_GHA_2: "Ensure run commands are not vulnerable to shell injection"
	PASSED for resource: jobs(security-scan).steps[9](Comment PR with Results)
	File: /.github/workflows/security-scan.yml:75-96
Check: CKV_GHA_3: "Suspicious use of curl with secrets"
	PASSED for resource: jobs(security-scan).steps[1](Checkout Code)
	File: /.github/workflows/security-scan.yml:17-21
Check: CKV_GHA_3: "Suspicious use of curl with secrets"
	PASSED for resource: jobs(security-scan).steps[2](Install Station CLI)
	File: /.github/workflows/security-scan.yml:20-26
Check: CKV_GHA_3: "Suspicious use of curl with secrets"
	PASSED for resource: jobs(security-scan).steps[3](Setup Station Environment)
	File: /.github/workflows/security-scan.yml:25-31
Check: CKV_GHA_3: "Suspicious use of curl with secrets"
	PASSED for resource: jobs(security-scan).steps[4](Install Security Scanner Bundle)
	File: /.github/workflows/security-scan.yml:30-37
Check: CKV_GHA_3: "Suspicious use of curl with secrets"
	PASSED for resource: jobs(security-scan).steps[5](Run Terraform Security Scan)
	File: /.github/workflows/security-scan.yml:36-45
Check: CKV_GHA_3: "Suspicious use of curl with secrets"
	PASSED for resource: jobs(security-scan).steps[6](Run Container Security Scan)
	File: /.github/workflows/security-scan.yml:44-53
Check: CKV_GHA_3: "Suspicious use of curl with secrets"
	PASSED for resource: jobs(security-scan).steps[7](Run Code Vulnerability Scan)
	File: /.github/workflows/security-scan.yml:52-61
Check: CKV_GHA_3: "Suspicious use of curl with secrets"
	PASSED for resource: jobs(security-scan).steps[8](Generate Security Report)
	File: /.github/workflows/security-scan.yml:60-76
Check: CKV_GHA_3: "Suspicious use of curl with secrets"
	PASSED for resource: jobs(security-scan).steps[9](Comment PR with Results)
	File: /.github/workflows/security-scan.yml:75-96
Check: CKV_GHA_1: "Ensure ACTIONS_ALLOW_UNSECURE_COMMANDS isn't true on environment variables"
	PASSED for resource: jobs(security-scan).steps[1](Checkout Code)
	File: /.github/workflows/security-scan.yml:17-21
Check: CKV_GHA_1: "Ensure ACTIONS_ALLOW_UNSECURE_COMMANDS isn't true on environment variables"
	PASSED for resource: jobs(security-scan).steps[2](Install Station CLI)
	File: /.github/workflows/security-scan.yml:20-26
Check: CKV_GHA_1: "Ensure ACTIONS_ALLOW_UNSECURE_COMMANDS isn't true on environment variables"
	PASSED for resource: jobs(security-scan).steps[3](Setup Station Environment)
	File: /.github/workflows/security-scan.yml:25-31
Check: CKV_GHA_1: "Ensure ACTIONS_ALLOW_UNSECURE_COMMANDS isn't true on environment variables"
	PASSED for resource: jobs(security-scan).steps[4](Install Security Scanner Bundle)
	File: /.github/workflows/security-scan.yml:30-37
Check: CKV_GHA_1: "Ensure ACTIONS_ALLOW_UNSECURE_COMMANDS isn't true on environment variables"
	PASSED for resource: jobs(security-scan).steps[5](Run Terraform Security Scan)
	File: /.github/workflows/security-scan.yml:36-45
Check: CKV_GHA_1: "Ensure ACTIONS_ALLOW_UNSECURE_COMMANDS isn't true on environment variables"
	PASSED for resource: jobs(security-scan).steps[6](Run Container Security Scan)
	File: /.github/workflows/security-scan.yml:44-53
Check: CKV_GHA_1: "Ensure ACTIONS_ALLOW_UNSECURE_COMMANDS isn't true on environment variables"
	PASSED for resource: jobs(security-scan).steps[7](Run Code Vulnerability Scan)
	File: /.github/workflows/security-scan.yml:52-61
Check: CKV_GHA_1: "Ensure ACTIONS_ALLOW_UNSECURE_COMMANDS isn't true on environment variables"
	PASSED for resource: jobs(security-scan).steps[8](Generate Security Report)
	File: /.github/workflows/security-scan.yml:60-76
Check: CKV_GHA_1: "Ensure ACTIONS_ALLOW_UNSECURE_COMMANDS isn't true on environment variables"
	PASSED for resource: jobs(security-scan).steps[9](Comment PR with Results)
	File: /.github/workflows/security-scan.yml:75-96
Check: CKV_GHA_5: "Found artifact build without evidence of cosign sign execution in pipeline"
	PASSED for resource: jobs
	File: /.github/workflows/station-docker-scan.yml:13-110
Check: CKV_GHA_4: "Suspicious use of netcat with IP address"
	PASSED for resource: jobs(security-scan)
	File: /.github/workflows/station-docker-scan.yml:14-110
Check: CKV_GHA_6: "Found artifact build without evidence of cosign sbom attestation in pipeline"
	PASSED for resource: jobs
	File: /.github/workflows/station-docker-scan.yml:13-110
Check: CKV_GHA_2: "Ensure run commands are not vulnerable to shell injection"
	PASSED for resource: jobs(security-scan)
	File: /.github/workflows/station-docker-scan.yml:14-110
Check: CKV_GHA_3: "Suspicious use of curl with secrets"
	PASSED for resource: jobs(security-scan)
	File: /.github/workflows/station-docker-scan.yml:14-110
Check: CKV_GHA_1: "Ensure ACTIONS_ALLOW_UNSECURE_COMMANDS isn't true on environment variables"
	PASSED for resource: jobs(security-scan)
	File: /.github/workflows/station-docker-scan.yml:14-110
Check: CKV_GHA_7: "The build output cannot be affected by user parameters other than the build entry point and the top-level source location. GitHub Actions workflow_dispatch inputs MUST be empty. "
	PASSED for resource: on(Station Docker Container Security Scan)
	File: /.github/workflows/station-docker-scan.yml:4-13
Check: CKV_GHA_4: "Suspicious use of netcat with IP address"
	PASSED for resource: jobs(security-scan).steps[1](Checkout Code)
	File: /.github/workflows/station-docker-scan.yml:17-21
Check: CKV_GHA_4: "Suspicious use of netcat with IP address"
	PASSED for resource: jobs(security-scan).steps[2](Pull Station Bundle Container)
	File: /.github/workflows/station-docker-scan.yml:20-27
Check: CKV_GHA_4: "Suspicious use of netcat with IP address"
	PASSED for resource: jobs(security-scan).steps[3](Run DevOps Troubleshooting Scan)
	File: /.github/workflows/station-docker-scan.yml:26-43
Check: CKV_GHA_4: "Suspicious use of netcat with IP address"
	PASSED for resource: jobs(security-scan).steps[4](Run Deployment Diagnosis)
	File: /.github/workflows/station-docker-scan.yml:42-59
Check: CKV_GHA_4: "Suspicious use of netcat with IP address"
	PASSED for resource: jobs(security-scan).steps[5](Run Server Performance Analysis)
	File: /.github/workflows/station-docker-scan.yml:58-75
Check: CKV_GHA_4: "Suspicious use of netcat with IP address"
	PASSED for resource: jobs(security-scan).steps[6](Generate DevOps Analysis Report)
	File: /.github/workflows/station-docker-scan.yml:74-90
Check: CKV_GHA_4: "Suspicious use of netcat with IP address"
	PASSED for resource: jobs(security-scan).steps[7](Comment PR with Results)
	File: /.github/workflows/station-docker-scan.yml:89-110
Check: CKV_GHA_2: "Ensure run commands are not vulnerable to shell injection"
	PASSED for resource: jobs(security-scan).steps[1](Checkout Code)
	File: /.github/workflows/station-docker-scan.yml:17-21
Check: CKV_GHA_2: "Ensure run commands are not vulnerable to shell injection"
	PASSED for resource: jobs(security-scan).steps[2](Pull Station Bundle Container)
	File: /.github/workflows/station-docker-scan.yml:20-27
Check: CKV_GHA_2: "Ensure run commands are not vulnerable to shell injection"
	PASSED for resource: jobs(security-scan).steps[3](Run DevOps Troubleshooting Scan)
	File: /.github/workflows/station-docker-scan.yml:26-43
Check: CKV_GHA_2: "Ensure run commands are not vulnerable to shell injection"
	PASSED for resource: jobs(security-scan).steps[4](Run Deployment Diagnosis)
	File: /.github/workflows/station-docker-scan.yml:42-59
Check: CKV_GHA_2: "Ensure run commands are not vulnerable to shell injection"
	PASSED for resource: jobs(security-scan).steps[5](Run Server Performance Analysis)
	File: /.github/workflows/station-docker-scan.yml:58-75
Check: CKV_GHA_2: "Ensure run commands are not vulnerable to shell injection"
	PASSED for resource: jobs(security-scan).steps[6](Generate DevOps Analysis Report)
	File: /.github/workflows/station-docker-scan.yml:74-90
Check: CKV_GHA_2: "Ensure run commands are not vulnerable to shell injection"
	PASSED for resource: jobs(security-scan).steps[7](Comment PR with Results)
	File: /.github/workflows/station-docker-scan.yml:89-110
Check: CKV_GHA_3: "Suspicious use of curl with secrets"
	PASSED for resource: jobs(security-scan).steps[1](Checkout Code)
	File: /.github/workflows/station-docker-scan.yml:17-21
Check: CKV_GHA_3: "Suspicious use of curl with secrets"
	PASSED for resource: jobs(security-scan).steps[2](Pull Station Bundle Container)
	File: /.github/workflows/station-docker-scan.yml:20-27
Check: CKV_GHA_3: "Suspicious use of curl with secrets"
	PASSED for resource: jobs(security-scan).steps[3](Run DevOps Troubleshooting Scan)
	File: /.github/workflows/station-docker-scan.yml:26-43
Check: CKV_GHA_3: "Suspicious use of curl with secrets"
	PASSED for resource: jobs(security-scan).steps[4](Run Deployment Diagnosis)
	File: /.github/workflows/station-docker-scan.yml:42-59
Check: CKV_GHA_3: "Suspicious use of curl with secrets"
	PASSED for resource: jobs(security-scan).steps[5](Run Server Performance Analysis)
	File: /.github/workflows/station-docker-scan.yml:58-75
Check: CKV_GHA_3: "Suspicious use of curl with secrets"
	PASSED for resource: jobs(security-scan).steps[6](Generate DevOps Analysis Report)
	File: /.github/workflows/station-docker-scan.yml:74-90
Check: CKV_GHA_3: "Suspicious use of curl with secrets"
	PASSED for resource: jobs(security-scan).steps[7](Comment PR with Results)
	File: /.github/workflows/station-docker-scan.yml:89-110
Check: CKV_GHA_1: "Ensure ACTIONS_ALLOW_UNSECURE_COMMANDS isn't true on environment variables"
	PASSED for resource: jobs(security-scan).steps[1](Checkout Code)
	File: /.github/workflows/station-docker-scan.yml:17-21
Check: CKV_GHA_1: "Ensure ACTIONS_ALLOW_UNSECURE_COMMANDS isn't true on environment variables"
	PASSED for resource: jobs(security-scan).steps[2](Pull Station Bundle Container)
	File: /.github/workflows/station-docker-scan.yml:20-27
Check: CKV_GHA_1: "Ensure ACTIONS_ALLOW_UNSECURE_COMMANDS isn't true on environment variables"
	PASSED for resource: jobs(security-scan).steps[3](Run DevOps Troubleshooting Scan)
	File: /.github/workflows/station-docker-scan.yml:26-43
Check: CKV_GHA_1: "Ensure ACTIONS_ALLOW_UNSECURE_COMMANDS isn't true on environment variables"
	PASSED for resource: jobs(security-scan).steps[4](Run Deployment Diagnosis)
	File: /.github/workflows/station-docker-scan.yml:42-59
Check: CKV_GHA_1: "Ensure ACTIONS_ALLOW_UNSECURE_COMMANDS isn't true on environment variables"
	PASSED for resource: jobs(security-scan).steps[5](Run Server Performance Analysis)
	File: /.github/workflows/station-docker-scan.yml:58-75
Check: CKV_GHA_1: "Ensure ACTIONS_ALLOW_UNSECURE_COMMANDS isn't true on environment variables"
	PASSED for resource: jobs(security-scan).steps[6](Generate DevOps Analysis Report)
	File: /.github/workflows/station-docker-scan.yml:74-90
Check: CKV_GHA_1: "Ensure ACTIONS_ALLOW_UNSECURE_COMMANDS isn't true on environment variables"
	PASSED for resource: jobs(security-scan).steps[7](Comment PR with Results)
	File: /.github/workflows/station-docker-scan.yml:89-110
Check: CKV_GHA_5: "Found artifact build without evidence of cosign sign execution in pipeline"
	PASSED for resource: jobs
	File: /.github/workflows/simple-devops-audit.yml:11-66
Check: CKV_GHA_4: "Suspicious use of netcat with IP address"
	PASSED for resource: jobs(security-audit)
	File: /.github/workflows/simple-devops-audit.yml:12-66
Check: CKV_GHA_6: "Found artifact build without evidence of cosign sbom attestation in pipeline"
	PASSED for resource: jobs
	File: /.github/workflows/simple-devops-audit.yml:11-66
Check: CKV_GHA_2: "Ensure run commands are not vulnerable to shell injection"
	PASSED for resource: jobs(security-audit)
	File: /.github/workflows/simple-devops-audit.yml:12-66
Check: CKV_GHA_3: "Suspicious use of curl with secrets"
	PASSED for resource: jobs(security-audit)
	File: /.github/workflows/simple-devops-audit.yml:12-66
Check: CKV_GHA_1: "Ensure ACTIONS_ALLOW_UNSECURE_COMMANDS isn't true on environment variables"
	PASSED for resource: jobs(security-audit)
	File: /.github/workflows/simple-devops-audit.yml:12-66
Check: CKV_GHA_7: "The build output cannot be affected by user parameters other than the build entry point and the top-level source location. GitHub Actions workflow_dispatch inputs MUST be empty. "
	PASSED for resource: on(Simple DevOps Security Audit)
	File: /.github/workflows/simple-devops-audit.yml:4-11
Check: CKV_GHA_4: "Suspicious use of netcat with IP address"
	PASSED for resource: jobs(security-audit).steps[1](Checkout Code)
	File: /.github/workflows/simple-devops-audit.yml:15-19
Check: CKV_GHA_4: "Suspicious use of netcat with IP address"
	PASSED for resource: jobs(security-audit).steps[2](Run Security Scanner Agent)
	File: /.github/workflows/simple-devops-audit.yml:18-33
Check: CKV_GHA_4: "Suspicious use of netcat with IP address"
	PASSED for resource: jobs(security-audit).steps[3](Run Terraform Security Auditor)
	File: /.github/workflows/simple-devops-audit.yml:32-47
Check: CKV_GHA_4: "Suspicious use of netcat with IP address"
	PASSED for resource: jobs(security-audit).steps[4](Generate Security Report Summary)
	File: /.github/workflows/simple-devops-audit.yml:46-66
Check: CKV_GHA_2: "Ensure run commands are not vulnerable to shell injection"
	PASSED for resource: jobs(security-audit).steps[1](Checkout Code)
	File: /.github/workflows/simple-devops-audit.yml:15-19
Check: CKV_GHA_2: "Ensure run commands are not vulnerable to shell injection"
	PASSED for resource: jobs(security-audit).steps[2](Run Security Scanner Agent)
	File: /.github/workflows/simple-devops-audit.yml:18-33
Check: CKV_GHA_2: "Ensure run commands are not vulnerable to shell injection"
	PASSED for resource: jobs(security-audit).steps[3](Run Terraform Security Auditor)
	File: /.github/workflows/simple-devops-audit.yml:32-47
Check: CKV_GHA_2: "Ensure run commands are not vulnerable to shell injection"
	PASSED for resource: jobs(security-audit).steps[4](Generate Security Report Summary)
	File: /.github/workflows/simple-devops-audit.yml:46-66
Check: CKV_GHA_3: "Suspicious use of curl with secrets"
	PASSED for resource: jobs(security-audit).steps[1](Checkout Code)
	File: /.github/workflows/simple-devops-audit.yml:15-19
Check: CKV_GHA_3: "Suspicious use of curl with secrets"
	PASSED for resource: jobs(security-audit).steps[2](Run Security Scanner Agent)
	File: /.github/workflows/simple-devops-audit.yml:18-33
Check: CKV_GHA_3: "Suspicious use of curl with secrets"
	PASSED for resource: jobs(security-audit).steps[3](Run Terraform Security Auditor)
	File: /.github/workflows/simple-devops-audit.yml:32-47
Check: CKV_GHA_3: "Suspicious use of curl with secrets"
	PASSED for resource: jobs(security-audit).steps[4](Generate Security Report Summary)
	File: /.github/workflows/simple-devops-audit.yml:46-66
Check: CKV_GHA_1: "Ensure ACTIONS_ALLOW_UNSECURE_COMMANDS isn't true on environment variables"
	PASSED for resource: jobs(security-audit).steps[1](Checkout Code)
	File: /.github/workflows/simple-devops-audit.yml:15-19
Check: CKV_GHA_1: "Ensure ACTIONS_ALLOW_UNSECURE_COMMANDS isn't true on environment variables"
	PASSED for resource: jobs(security-audit).steps[2](Run Security Scanner Agent)
	File: /.github/workflows/simple-devops-audit.yml:18-33
Check: CKV_GHA_1: "Ensure ACTIONS_ALLOW_UNSECURE_COMMANDS isn't true on environment variables"
	PASSED for resource: jobs(security-audit).steps[3](Run Terraform Security Auditor)
	File: /.github/workflows/simple-devops-audit.yml:32-47
Check: CKV_GHA_1: "Ensure ACTIONS_ALLOW_UNSECURE_COMMANDS isn't true on environment variables"
	PASSED for resource: jobs(security-audit).steps[4](Generate Security Report Summary)
	File: /.github/workflows/simple-devops-audit.yml:46-66
Check: CKV_GHA_5: "Found artifact build without evidence of cosign sign execution in pipeline"
	PASSED for resource: jobs
	File: /.github/workflows/station-security-audit.yml:15-189
Check: CKV_GHA_4: "Suspicious use of netcat with IP address"
	PASSED for resource: jobs(security-audit)
	File: /.github/workflows/station-security-audit.yml:16-189
Check: CKV_GHA_6: "Found artifact build without evidence of cosign sbom attestation in pipeline"
	PASSED for resource: jobs
	File: /.github/workflows/station-security-audit.yml:15-189
Check: CKV_GHA_2: "Ensure run commands are not vulnerable to shell injection"
	PASSED for resource: jobs(security-audit)
	File: /.github/workflows/station-security-audit.yml:16-189
Check: CKV_GHA_3: "Suspicious use of curl with secrets"
	PASSED for resource: jobs(security-audit)
	File: /.github/workflows/station-security-audit.yml:16-189
Check: CKV_GHA_1: "Ensure ACTIONS_ALLOW_UNSECURE_COMMANDS isn't true on environment variables"
	PASSED for resource: jobs(security-audit)
	File: /.github/workflows/station-security-audit.yml:16-189
Check: CKV_GHA_4: "Suspicious use of netcat with IP address"
	PASSED for resource: jobs(security-audit).steps[1](📥 Checkout Code)
	File: /.github/workflows/station-security-audit.yml:23-27
Check: CKV_GHA_4: "Suspicious use of netcat with IP address"
	PASSED for resource: jobs(security-audit).steps[2](🐳 Pull Station DevOps Container)
	File: /.github/workflows/station-security-audit.yml:26-33
Check: CKV_GHA_4: "Suspicious use of netcat with IP address"
	PASSED for resource: jobs(security-audit).steps[3](🔍 Run Security Scanner Agent)
	File: /.github/workflows/station-security-audit.yml:32-63
Check: CKV_GHA_4: "Suspicious use of netcat with IP address"
	PASSED for resource: jobs(security-audit).steps[4](🏗️ Run Terraform Auditor Agent)
	File: /.github/workflows/station-security-audit.yml:62-93
Check: CKV_GHA_4: "Suspicious use of netcat with IP address"
	PASSED for resource: jobs(security-audit).steps[5](📊 Generate Security Report Summary)
	File: /.github/workflows/station-security-audit.yml:92-124
Check: CKV_GHA_4: "Suspicious use of netcat with IP address"
	PASSED for resource: jobs(security-audit).steps[6](💬 Comment PR with Detailed Results)
	File: /.github/workflows/station-security-audit.yml:123-180
Check: CKV_GHA_4: "Suspicious use of netcat with IP address"
	PASSED for resource: jobs(security-audit).steps[7](📁 Upload Detailed Results)
	File: /.github/workflows/station-security-audit.yml:179-189
Check: CKV_GHA_2: "Ensure run commands are not vulnerable to shell injection"
	PASSED for resource: jobs(security-audit).steps[1](📥 Checkout Code)
	File: /.github/workflows/station-security-audit.yml:23-27
Check: CKV_GHA_2: "Ensure run commands are not vulnerable to shell injection"
	PASSED for resource: jobs(security-audit).steps[2](🐳 Pull Station DevOps Container)
	File: /.github/workflows/station-security-audit.yml:26-33
Check: CKV_GHA_2: "Ensure run commands are not vulnerable to shell injection"
	PASSED for resource: jobs(security-audit).steps[3](🔍 Run Security Scanner Agent)
	File: /.github/workflows/station-security-audit.yml:32-63
Check: CKV_GHA_2: "Ensure run commands are not vulnerable to shell injection"
	PASSED for resource: jobs(security-audit).steps[4](🏗️ Run Terraform Auditor Agent)
	File: /.github/workflows/station-security-audit.yml:62-93
Check: CKV_GHA_2: "Ensure run commands are not vulnerable to shell injection"
	PASSED for resource: jobs(security-audit).steps[5](📊 Generate Security Report Summary)
	File: /.github/workflows/station-security-audit.yml:92-124
Check: CKV_GHA_2: "Ensure run commands are not vulnerable to shell injection"
	PASSED for resource: jobs(security-audit).steps[6](💬 Comment PR with Detailed Results)
	File: /.github/workflows/station-security-audit.yml:123-180
Check: CKV_GHA_2: "Ensure run commands are not vulnerable to shell injection"
	PASSED for resource: jobs(security-audit).steps[7](📁 Upload Detailed Results)
	File: /.github/workflows/station-security-audit.yml:179-189
Check: CKV_GHA_3: "Suspicious use of curl with secrets"
	PASSED for resource: jobs(security-audit).steps[1](📥 Checkout Code)
	File: /.github/workflows/station-security-audit.yml:23-27
Check: CKV_GHA_3: "Suspicious use of curl with secrets"
	PASSED for resource: jobs(security-audit).steps[2](🐳 Pull Station DevOps Container)
	File: /.github/workflows/station-security-audit.yml:26-33
Check: CKV_GHA_3: "Suspicious use of curl with secrets"
	PASSED for resource: jobs(security-audit).steps[3](🔍 Run Security Scanner Agent)
	File: /.github/workflows/station-security-audit.yml:32-63
Check: CKV_GHA_3: "Suspicious use of curl with secrets"
	PASSED for resource: jobs(security-audit).steps[4](🏗️ Run Terraform Auditor Agent)
	File: /.github/workflows/station-security-audit.yml:62-93
Check: CKV_GHA_3: "Suspicious use of curl with secrets"
	PASSED for resource: jobs(security-audit).steps[5](📊 Generate Security Report Summary)
	File: /.github/workflows/station-security-audit.yml:92-124
Check: CKV_GHA_3: "Suspicious use of curl with secrets"
	PASSED for resource: jobs(security-audit).steps[6](💬 Comment PR with Detailed Results)
	File: /.github/workflows/station-security-audit.yml:123-180
Check: CKV_GHA_3: "Suspicious use of curl with secrets"
	PASSED for resource: jobs(security-audit).steps[7](📁 Upload Detailed Results)
	File: /.github/workflows/station-security-audit.yml:179-189
Check: CKV_GHA_1: "Ensure ACTIONS_ALLOW_UNSECURE_COMMANDS isn't true on environment variables"
	PASSED for resource: jobs(security-audit).steps[1](📥 Checkout Code)
	File: /.github/workflows/station-security-audit.yml:23-27
Check: CKV_GHA_1: "Ensure ACTIONS_ALLOW_UNSECURE_COMMANDS isn't true on environment variables"
	PASSED for resource: jobs(security-audit).steps[2](🐳 Pull Station DevOps Container)
	File: /.github/workflows/station-security-audit.yml:26-33
Check: CKV_GHA_1: "Ensure ACTIONS_ALLOW_UNSECURE_COMMANDS isn't true on environment variables"
	PASSED for resource: jobs(security-audit).steps[3](🔍 Run Security Scanner Agent)
	File: /.github/workflows/station-security-audit.yml:32-63
Check: CKV_GHA_1: "Ensure ACTIONS_ALLOW_UNSECURE_COMMANDS isn't true on environment variables"
	PASSED for resource: jobs(security-audit).steps[4](🏗️ Run Terraform Auditor Agent)
	File: /.github/workflows/station-security-audit.yml:62-93
Check: CKV_GHA_1: "Ensure ACTIONS_ALLOW_UNSECURE_COMMANDS isn't true on environment variables"
	PASSED for resource: jobs(security-audit).steps[5](📊 Generate Security Report Summary)
	File: /.github/workflows/station-security-audit.yml:92-124
Check: CKV_GHA_1: "Ensure ACTIONS_ALLOW_UNSECURE_COMMANDS isn't true on environment variables"
	PASSED for resource: jobs(security-audit).steps[6](💬 Comment PR with Detailed Results)
	File: /.github/workflows/station-security-audit.yml:123-180
Check: CKV_GHA_1: "Ensure ACTIONS_ALLOW_UNSECURE_COMMANDS isn't true on environment variables"
	PASSED for resource: jobs(security-audit).steps[7](📁 Upload Detailed Results)
	File: /.github/workflows/station-security-audit.yml:179-189
Check: CKV_GHA_5: "Found artifact build without evidence of cosign sign execution in pipeline"
	PASSED for resource: jobs
	File: /.github/workflows/station-security-scan.yml:11-72
Check: CKV_GHA_4: "Suspicious use of netcat with IP address"
	PASSED for resource: jobs(security-scan)
	File: /.github/workflows/station-security-scan.yml:12-72
Check: CKV_GHA_6: "Found artifact build without evidence of cosign sbom attestation in pipeline"
	PASSED for resource: jobs
	File: /.github/workflows/station-security-scan.yml:11-72
Check: CKV_GHA_2: "Ensure run commands are not vulnerable to shell injection"
	PASSED for resource: jobs(security-scan)
	File: /.github/workflows/station-security-scan.yml:12-72
Check: CKV_GHA_3: "Suspicious use of curl with secrets"
	PASSED for resource: jobs(security-scan)
	File: /.github/workflows/station-security-scan.yml:12-72
Check: CKV_GHA_1: "Ensure ACTIONS_ALLOW_UNSECURE_COMMANDS isn't true on environment variables"
	PASSED for resource: jobs(security-scan)
	File: /.github/workflows/station-security-scan.yml:12-72
Check: CKV_GHA_7: "The build output cannot be affected by user parameters other than the build entry point and the top-level source location. GitHub Actions workflow_dispatch inputs MUST be empty. "
	PASSED for resource: on(Station Security Scan)
	File: /.github/workflows/station-security-scan.yml:4-11
Check: CKV_GHA_4: "Suspicious use of netcat with IP address"
	PASSED for resource: jobs(security-scan).steps[1](Checkout Code)
	File: /.github/workflows/station-security-scan.yml:15-19
Check: CKV_GHA_4: "Suspicious use of netcat with IP address"
	PASSED for resource: jobs(security-scan).steps[2](Run Station Security Scanner)
	File: /.github/workflows/station-security-scan.yml:18-30
Check: CKV_GHA_4: "Suspicious use of netcat with IP address"
	PASSED for resource: jobs(security-scan).steps[3](Generate Security Report Summary)
	File: /.github/workflows/station-security-scan.yml:29-48
Check: CKV_GHA_4: "Suspicious use of netcat with IP address"
	PASSED for resource: jobs(security-scan).steps[4](Comment PR with Security Results)
	File: /.github/workflows/station-security-scan.yml:47-72
Check: CKV_GHA_2: "Ensure run commands are not vulnerable to shell injection"
	PASSED for resource: jobs(security-scan).steps[1](Checkout Code)
	File: /.github/workflows/station-security-scan.yml:15-19
Check: CKV_GHA_2: "Ensure run commands are not vulnerable to shell injection"
	PASSED for resource: jobs(security-scan).steps[2](Run Station Security Scanner)
	File: /.github/workflows/station-security-scan.yml:18-30
Check: CKV_GHA_2: "Ensure run commands are not vulnerable to shell injection"
	PASSED for resource: jobs(security-scan).steps[3](Generate Security Report Summary)
	File: /.github/workflows/station-security-scan.yml:29-48
Check: CKV_GHA_2: "Ensure run commands are not vulnerable to shell injection"
	PASSED for resource: jobs(security-scan).steps[4](Comment PR with Security Results)
	File: /.github/workflows/station-security-scan.yml:47-72
Check: CKV_GHA_3: "Suspicious use of curl with secrets"
	PASSED for resource: jobs(security-scan).steps[1](Checkout Code)
	File: /.github/workflows/station-security-scan.yml:15-19
Check: CKV_GHA_3: "Suspicious use of curl with secrets"
	PASSED for resource: jobs(security-scan).steps[2](Run Station Security Scanner)
	File: /.github/workflows/station-security-scan.yml:18-30
Check: CKV_GHA_3: "Suspicious use of curl with secrets"
	PASSED for resource: jobs(security-scan).steps[3](Generate Security Report Summary)
	File: /.github/workflows/station-security-scan.yml:29-48
Check: CKV_GHA_3: "Suspicious use of curl with secrets"
	PASSED for resource: jobs(security-scan).steps[4](Comment PR with Security Results)
	File: /.github/workflows/station-security-scan.yml:47-72
Check: CKV_GHA_1: "Ensure ACTIONS_ALLOW_UNSECURE_COMMANDS isn't true on environment variables"
	PASSED for resource: jobs(security-scan).steps[1](Checkout Code)
	File: /.github/workflows/station-security-scan.yml:15-19
Check: CKV_GHA_1: "Ensure ACTIONS_ALLOW_UNSECURE_COMMANDS isn't true on environment variables"
	PASSED for resource: jobs(security-scan).steps[2](Run Station Security Scanner)
	File: /.github/workflows/station-security-scan.yml:18-30
Check: CKV_GHA_1: "Ensure ACTIONS_ALLOW_UNSECURE_COMMANDS isn't true on environment variables"
	PASSED for resource: jobs(security-scan).steps[3](Generate Security Report Summary)
	File: /.github/workflows/station-security-scan.yml:29-48
Check: CKV_GHA_1: "Ensure ACTIONS_ALLOW_UNSECURE_COMMANDS isn't true on environment variables"
	PASSED for resource: jobs(security-scan).steps[4](Comment PR with Security Results)
	File: /.github/workflows/station-security-scan.yml:47-72
Check: CKV_GHA_5: "Found artifact build without evidence of cosign sign execution in pipeline"
	PASSED for resource: jobs
	File: /.github/workflows/devops-audit.yml:11-131
Check: CKV_GHA_4: "Suspicious use of netcat with IP address"
	PASSED for resource: jobs(comprehensive-audit)
	File: /.github/workflows/devops-audit.yml:12-131
Check: CKV_GHA_6: "Found artifact build without evidence of cosign sbom attestation in pipeline"
	PASSED for resource: jobs
	File: /.github/workflows/devops-audit.yml:11-131
Check: CKV_GHA_2: "Ensure run commands are not vulnerable to shell injection"
	PASSED for resource: jobs(comprehensive-audit)
	File: /.github/workflows/devops-audit.yml:12-131
Check: CKV_GHA_3: "Suspicious use of curl with secrets"
	PASSED for resource: jobs(comprehensive-audit)
	File: /.github/workflows/devops-audit.yml:12-131
Check: CKV_GHA_1: "Ensure ACTIONS_ALLOW_UNSECURE_COMMANDS isn't true on environment variables"
	PASSED for resource: jobs(comprehensive-audit)
	File: /.github/workflows/devops-audit.yml:12-131
Check: CKV_GHA_7: "The build output cannot be affected by user parameters other than the build entry point and the top-level source location. GitHub Actions workflow_dispatch inputs MUST be empty. "
	PASSED for resource: on(DevOps CICD Pipeline Audit)
	File: /.github/workflows/devops-audit.yml:4-11
Check: CKV_GHA_4: "Suspicious use of netcat with IP address"
	PASSED for resource: jobs(comprehensive-audit).steps[1](Checkout Code)
	File: /.github/workflows/devops-audit.yml:15-19
Check: CKV_GHA_4: "Suspicious use of netcat with IP address"
	PASSED for resource: jobs(comprehensive-audit).steps[2](Run DevOps CICD Pipeline Auditor)
	File: /.github/workflows/devops-audit.yml:18-34
Check: CKV_GHA_4: "Suspicious use of netcat with IP address"
	PASSED for resource: jobs(comprehensive-audit).steps[3](Run Infrastructure Code Auditor)
	File: /.github/workflows/devops-audit.yml:33-49
Check: CKV_GHA_4: "Suspicious use of netcat with IP address"
	PASSED for resource: jobs(comprehensive-audit).steps[4](Run Supply Chain Security Analysis)
	File: /.github/workflows/devops-audit.yml:48-64
Check: CKV_GHA_4: "Suspicious use of netcat with IP address"
	PASSED for resource: jobs(comprehensive-audit).steps[5](Run GitHub Actions Security Review)
	File: /.github/workflows/devops-audit.yml:63-79
Check: CKV_GHA_4: "Suspicious use of netcat with IP address"
	PASSED for resource: jobs(comprehensive-audit).steps[6](Generate Comprehensive Security Report)
	File: /.github/workflows/devops-audit.yml:78-103
Check: CKV_GHA_4: "Suspicious use of netcat with IP address"
	PASSED for resource: jobs(comprehensive-audit).steps[7](Comment PR with Security Results)
	File: /.github/workflows/devops-audit.yml:102-131
Check: CKV_GHA_2: "Ensure run commands are not vulnerable to shell injection"
	PASSED for resource: jobs(comprehensive-audit).steps[1](Checkout Code)
	File: /.github/workflows/devops-audit.yml:15-19
Check: CKV_GHA_2: "Ensure run commands are not vulnerable to shell injection"
	PASSED for resource: jobs(comprehensive-audit).steps[2](Run DevOps CICD Pipeline Auditor)
	File: /.github/workflows/devops-audit.yml:18-34
Check: CKV_GHA_2: "Ensure run commands are not vulnerable to shell injection"
	PASSED for resource: jobs(comprehensive-audit).steps[3](Run Infrastructure Code Auditor)
	File: /.github/workflows/devops-audit.yml:33-49
Check: CKV_GHA_2: "Ensure run commands are not vulnerable to shell injection"
	PASSED for resource: jobs(comprehensive-audit).steps[4](Run Supply Chain Security Analysis)
	File: /.github/workflows/devops-audit.yml:48-64
Check: CKV_GHA_2: "Ensure run commands are not vulnerable to shell injection"
	PASSED for resource: jobs(comprehensive-audit).steps[5](Run GitHub Actions Security Review)
	File: /.github/workflows/devops-audit.yml:63-79
Check: CKV_GHA_2: "Ensure run commands are not vulnerable to shell injection"
	PASSED for resource: jobs(comprehensive-audit).steps[6](Generate Comprehensive Security Report)
	File: /.github/workflows/devops-audit.yml:78-103
Check: CKV_GHA_2: "Ensure run commands are not vulnerable to shell injection"
	PASSED for resource: jobs(comprehensive-audit).steps[7](Comment PR with Security Results)
	File: /.github/workflows/devops-audit.yml:102-131
Check: CKV_GHA_3: "Suspicious use of curl with secrets"
	PASSED for resource: jobs(comprehensive-audit).steps[1](Checkout Code)
	File: /.github/workflows/devops-audit.yml:15-19
Check: CKV_GHA_3: "Suspicious use of curl with secrets"
	PASSED for resource: jobs(comprehensive-audit).steps[2](Run DevOps CICD Pipeline Auditor)
	File: /.github/workflows/devops-audit.yml:18-34
Check: CKV_GHA_3: "Suspicious use of curl with secrets"
	PASSED for resource: jobs(comprehensive-audit).steps[3](Run Infrastructure Code Auditor)
	File: /.github/workflows/devops-audit.yml:33-49
Check: CKV_GHA_3: "Suspicious use of curl with secrets"
	PASSED for resource: jobs(comprehensive-audit).steps[4](Run Supply Chain Security Analysis)
	File: /.github/workflows/devops-audit.yml:48-64
Check: CKV_GHA_3: "Suspicious use of curl with secrets"
	PASSED for resource: jobs(comprehensive-audit).steps[5](Run GitHub Actions Security Review)
	File: /.github/workflows/devops-audit.yml:63-79
Check: CKV_GHA_3: "Suspicious use of curl with secrets"
	PASSED for resource: jobs(comprehensive-audit).steps[6](Generate Comprehensive Security Report)
	File: /.github/workflows/devops-audit.yml:78-103
Check: CKV_GHA_3: "Suspicious use of curl with secrets"
	PASSED for resource: jobs(comprehensive-audit).steps[7](Comment PR with Security Results)
	File: /.github/workflows/devops-audit.yml:102-131
Check: CKV_GHA_1: "Ensure ACTIONS_ALLOW_UNSECURE_COMMANDS isn't true on environment variables"
	PASSED for resource: jobs(comprehensive-audit).steps[1](Checkout Code)
	File: /.github/workflows/devops-audit.yml:15-19
Check: CKV_GHA_1: "Ensure ACTIONS_ALLOW_UNSECURE_COMMANDS isn't true on environment variables"
	PASSED for resource: jobs(comprehensive-audit).steps[2](Run DevOps CICD Pipeline Auditor)
	File: /.github/workflows/devops-audit.yml:18-34
Check: CKV_GHA_1: "Ensure ACTIONS_ALLOW_UNSECURE_COMMANDS isn't true on environment variables"
	PASSED for resource: jobs(comprehensive-audit).steps[3](Run Infrastructure Code Auditor)
	File: /.github/workflows/devops-audit.yml:33-49
Check: CKV_GHA_1: "Ensure ACTIONS_ALLOW_UNSECURE_COMMANDS isn't true on environment variables"
	PASSED for resource: jobs(comprehensive-audit).steps[4](Run Supply Chain Security Analysis)
	File: /.github/workflows/devops-audit.yml:48-64
Check: CKV_GHA_1: "Ensure ACTIONS_ALLOW_UNSECURE_COMMANDS isn't true on environment variables"
	PASSED for resource: jobs(comprehensive-audit).steps[5](Run GitHub Actions Security Review)
	File: /.github/workflows/devops-audit.yml:63-79
Check: CKV_GHA_1: "Ensure ACTIONS_ALLOW_UNSECURE_COMMANDS isn't true on environment variables"
	PASSED for resource: jobs(comprehensive-audit).steps[6](Generate Comprehensive Security Report)
	File: /.github/workflows/devops-audit.yml:78-103
Check: CKV_GHA_1: "Ensure ACTIONS_ALLOW_UNSECURE_COMMANDS isn't true on environment variables"
	PASSED for resource: jobs(comprehensive-audit).steps[7](Comment PR with Security Results)
	File: /.github/workflows/devops-audit.yml:102-131
Check: CKV_GHA_5: "Found artifact build without evidence of cosign sign execution in pipeline"
	PASSED for resource: jobs
	File: /.github/workflows/station-basic-test.yml:10-57
Check: CKV_GHA_4: "Suspicious use of netcat with IP address"
	PASSED for resource: jobs(basic-test)
	File: /.github/workflows/station-basic-test.yml:11-57
Check: CKV_GHA_6: "Found artifact build without evidence of cosign sbom attestation in pipeline"
	PASSED for resource: jobs
	File: /.github/workflows/station-basic-test.yml:10-57
Check: CKV_GHA_2: "Ensure run commands are not vulnerable to shell injection"
	PASSED for resource: jobs(basic-test)
	File: /.github/workflows/station-basic-test.yml:11-57
Check: CKV_GHA_3: "Suspicious use of curl with secrets"
	PASSED for resource: jobs(basic-test)
	File: /.github/workflows/station-basic-test.yml:11-57
Check: CKV_GHA_1: "Ensure ACTIONS_ALLOW_UNSECURE_COMMANDS isn't true on environment variables"
	PASSED for resource: jobs(basic-test)
	File: /.github/workflows/station-basic-test.yml:11-57
Check: CKV_GHA_7: "The build output cannot be affected by user parameters other than the build entry point and the top-level source location. GitHub Actions workflow_dispatch inputs MUST be empty. "
	PASSED for resource: on(Station Container Basic Test)
	File: /.github/workflows/station-basic-test.yml:4-10
Check: CKV_GHA_4: "Suspicious use of netcat with IP address"
	PASSED for resource: jobs(basic-test).steps[1](Checkout Code)
	File: /.github/workflows/station-basic-test.yml:14-18
Check: CKV_GHA_4: "Suspicious use of netcat with IP address"
	PASSED for resource: jobs(basic-test).steps[2](Test Station Container Basic Functionality)
	File: /.github/workflows/station-basic-test.yml:17-36
Check: CKV_GHA_4: "Suspicious use of netcat with IP address"
	PASSED for resource: jobs(basic-test).steps[3](Test Ship Tools Discovery)
	File: /.github/workflows/station-basic-test.yml:35-46
Check: CKV_GHA_4: "Suspicious use of netcat with IP address"
	PASSED for resource: jobs(basic-test).steps[4](Generate Test Report)
	File: /.github/workflows/station-basic-test.yml:45-57
Check: CKV_GHA_2: "Ensure run commands are not vulnerable to shell injection"
	PASSED for resource: jobs(basic-test).steps[1](Checkout Code)
	File: /.github/workflows/station-basic-test.yml:14-18
Check: CKV_GHA_2: "Ensure run commands are not vulnerable to shell injection"
	PASSED for resource: jobs(basic-test).steps[2](Test Station Container Basic Functionality)
	File: /.github/workflows/station-basic-test.yml:17-36
Check: CKV_GHA_2: "Ensure run commands are not vulnerable to shell injection"
	PASSED for resource: jobs(basic-test).steps[3](Test Ship Tools Discovery)
	File: /.github/workflows/station-basic-test.yml:35-46
Check: CKV_GHA_2: "Ensure run commands are not vulnerable to shell injection"
	PASSED for resource: jobs(basic-test).steps[4](Generate Test Report)
	File: /.github/workflows/station-basic-test.yml:45-57
Check: CKV_GHA_3: "Suspicious use of curl with secrets"
	PASSED for resource: jobs(basic-test).steps[1](Checkout Code)
	File: /.github/workflows/station-basic-test.yml:14-18
Check: CKV_GHA_3: "Suspicious use of curl with secrets"
	PASSED for resource: jobs(basic-test).steps[2](Test Station Container Basic Functionality)
	File: /.github/workflows/station-basic-test.yml:17-36
Check: CKV_GHA_3: "Suspicious use of curl with secrets"
	PASSED for resource: jobs(basic-test).steps[3](Test Ship Tools Discovery)
	File: /.github/workflows/station-basic-test.yml:35-46
Check: CKV_GHA_3: "Suspicious use of curl with secrets"
	PASSED for resource: jobs(basic-test).steps[4](Generate Test Report)
	File: /.github/workflows/station-basic-test.yml:45-57
Check: CKV_GHA_1: "Ensure ACTIONS_ALLOW_UNSECURE_COMMANDS isn't true on environment variables"
	PASSED for resource: jobs(basic-test).steps[1](Checkout Code)
	File: /.github/workflows/station-basic-test.yml:14-18
Check: CKV_GHA_1: "Ensure ACTIONS_ALLOW_UNSECURE_COMMANDS isn't true on environment variables"
	PASSED for resource: jobs(basic-test).steps[2](Test Station Container Basic Functionality)
	File: /.github/workflows/station-basic-test.yml:17-36
Check: CKV_GHA_1: "Ensure ACTIONS_ALLOW_UNSECURE_COMMANDS isn't true on environment variables"
	PASSED for resource: jobs(basic-test).steps[3](Test Ship Tools Discovery)
	File: /.github/workflows/station-basic-test.yml:35-46
Check: CKV_GHA_1: "Ensure ACTIONS_ALLOW_UNSECURE_COMMANDS isn't true on environment variables"
	PASSED for resource: jobs(basic-test).steps[4](Generate Test Report)
	File: /.github/workflows/station-basic-test.yml:45-57
Check: CKV_GHA_7: "The build output cannot be affected by user parameters other than the build entry point and the top-level source location. GitHub Actions workflow_dispatch inputs MUST be empty. "
	FAILED for resource: on(🛡️ Station DevOps Security Audit)
	File: /.github/workflows/station-security-audit.yml:6-12

		6  |       environment:
		7  |         description: 'Environment to test (leave empty for default)'
		8  |         required: false
		9  |         default: 'devops-simple'
		10 |         type: string
		11 |   pull_request:
		12 |     branches: [ main ]

Check: CKV2_GHA_1: "Ensure top-level permissions are not set to write-all"
	FAILED for resource: on(Security Scan with Station Agents)
	File: /.github/workflows/security-scan.yml:0-1
Check: CKV2_GHA_1: "Ensure top-level permissions are not set to write-all"
	FAILED for resource: on(Station Docker Container Security Scan)
	File: /.github/workflows/station-docker-scan.yml:0-1
Check: CKV2_GHA_1: "Ensure top-level permissions are not set to write-all"
	FAILED for resource: on(Simple DevOps Security Audit)
	File: /.github/workflows/simple-devops-audit.yml:0-1
Check: CKV2_GHA_1: "Ensure top-level permissions are not set to write-all"
	FAILED for resource: on(🛡️ Station DevOps Security Audit)
	File: /.github/workflows/station-security-audit.yml:17-18
Check: CKV2_GHA_1: "Ensure top-level permissions are not set to write-all"
	FAILED for resource: on(Station Security Scan)
	File: /.github/workflows/station-security-scan.yml:0-1
Check: CKV2_GHA_1: "Ensure top-level permissions are not set to write-all"
	FAILED for resource: on(DevOps CICD Pipeline Audit)
	File: /.github/workflows/devops-audit.yml:74-75
Check: CKV2_GHA_1: "Ensure top-level permissions are not set to write-all"
	FAILED for resource: on(Station Container Basic Test)
	File: /.github/workflows/station-basic-test.yml:0-1
